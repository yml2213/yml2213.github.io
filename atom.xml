<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦磊の博客</title>
  <icon>https://ymlclub.cn/icon.png</icon>
  
  <link href="https://ymlclub.cn/atom.xml" rel="self"/>
  
  <link href="https://ymlclub.cn/"/>
  <updated>2022-06-30T02:49:17.875Z</updated>
  <id>https://ymlclub.cn/</id>
  
  <author>
    <name>YML</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何写一个简单的签到脚本(小白向)</title>
    <link href="https://ymlclub.cn/2022041231679/"/>
    <id>https://ymlclub.cn/2022041231679/</id>
    <published>2022-04-12T17:00:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><strong>背景</strong>: 最近羊毛没啥好写的了,京东也慢慢薅不动了(blog也鸽🕊了好久了呢),最近也有人问我脚本的问题,这里就统一写一个基础的脚本教程,给大家抛砖引玉,做一个基础基础!(本人小白水平,其中有啥错误 ❎ ,也希望各位大佬指教 )</p></blockquote><h2 id="一-梳理思路"><a class="markdownIt-Anchor" href="#一-梳理思路"></a> <strong>一 : 梳理思路：</strong></h2><ol><li><p>想要签到 , 必须有一个可以签到的软件 , 网页 , 小程序等</p></li><li><p><a href="https://www.wangan.com/p/7fygfgd3e50bbcae">抓包</a> 你想要进行签到的 软件 , 网页 , 小程序等(不会抓包或抓不到包的点击<a href="https://www.wangan.com/p/7fygfgd3e50bbcae">抓包</a> 的超链接去学习)</p></li><li><p>然后就是分析(很有可能需要解密的相关知识)你抓的数据包 , 直到找到 <strong>签到</strong> (或其他操作) 包</p></li><li><p>使用测试工具进行测试,确定是否可以请求成功(不成功自己寻找并解决问题)直到可以成功请求</p></li><li><p>最后就是写脚本了, 只要前面的完成了, 写脚本那就很快了</p></li></ol><h2 id="二-思路有了-那就开始吧"><a class="markdownIt-Anchor" href="#二-思路有了-那就开始吧"></a> 二: 思路有了, 那就开始吧!</h2><blockquote><p>博主是小白  博主是小白  博主是小白  博主是小白  博主是小白</p><p>有任何错误笑笑就好了 ,  当然更加欢迎您指出我的错误 , 万分感激的!</p></blockquote><h3 id="首先确定一个目标今天来个简单的例子"><a class="markdownIt-Anchor" href="#首先确定一个目标今天来个简单的例子"></a> 首先确定一个目标(今天来个简单的例子🌰)</h3><p>微信小程序:骁友会 (直接搜索或扫码进入:扫码有邀请 没啥用的,在意的自己搜索)</p><ul><li><img src="https://tucang.cc/api/image/show/898b175bf01510df27a3bb59db335b14" alt="image-20220411213118940" style="zoom: 33%;" /></li><li>注册登录后可以找到 <strong>任务列表</strong> 里面有 <strong>每日签到</strong>  跟其他的很多任务(今天就搞这个签到)</li><li>然后就是下一步了</li></ul><h3 id="进行-签到-相关操作的抓包"><a class="markdownIt-Anchor" href="#进行-签到-相关操作的抓包"></a> 进行 <strong>签到</strong> (相关操作)的抓包</h3><h4 id="根据不同的机型-我们需要分类讨论了-首先来说说ios吧"><a class="markdownIt-Anchor" href="#根据不同的机型-我们需要分类讨论了-首先来说说ios吧"></a> 根据不同的机型 , 我们需要分类讨论了  首先来说说ios吧</h4><ul><li>ios 抓包相关<ul><li>抓包软件<ul><li>免费的 : stream  图标就是个心电图是的 , 免费软件 , 国区可自行下载</li><li>收费软件:<ol><li>不得不说的就是 <strong><a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/21016.html">圈x</a></strong> ios绕不开的软件 , 操作教程找科技玩家小姐姐(点击超链接即可)(不会告诉你我搬运到我的bolg了) , 需要自行外区下载</li><li>thor 也叫锤子 , 就是长得像索尔的🔨吧  , 需要自行外区下载 (有这个软件的应该不需要教程)</li><li>Http Catcher 也叫网球 🎾 ,可能就是长得像🎾吧  国区可下载 , 高级功能需要付费解锁 🔓 , 有这个软件的也不需要教程</li><li>别的没怎么用过 , 听说过了</li></ol></li></ul></li><li>抓包操作<ul><li>不同的软件 , 操作也有所差异 , 但是本质都是一样的 , 都是通过建立 vpn 进行代理网络流量 , 从而进行捕获数据包 . 想要捕获https 数据包 , 都需要进行证书的信任工作 , 记得有两个关于证书的操作就够了,一个地方安装证书 , 一个地方信任证书 ;  详细教程自己百度  , google 去吧!</li></ul></li></ul></li></ul><h4 id="android-抓包相关"><a class="markdownIt-Anchor" href="#android-抓包相关"></a> Android 抓包相关</h4><ul><li>相对比 ios 来说 , 安卓的抓包就有利有弊了,得益于安卓的生态,也毁在安卓的生态(个人见解哈)<ul><li>抓包软件<ul><li>小黄鸟(3.3.6) ,  小蓝鸟 , 还有各种小黄鸟的改版 ; 安卓端知名的抓包软件 , 推荐3.3.6版本,别问为啥</li><li>抓包精灵  跟小黄鸟差不多的</li><li>还有好多好多好多好多没听说过的软件</li></ul></li></ul></li><li>抓包操作 同ios  自行搜索研究去吧!</li></ul><h4 id="pc-抓包相关"><a class="markdownIt-Anchor" href="#pc-抓包相关"></a> PC 抓包相关</h4><ul><li>上面的软件基本都是基于手机的 , 总有这样那样的不方便的地方,个人觉得还是配合电脑抓包,才能更好 , 更更快的分析数据包 (当然,你只有手机就当我在💨)</li><li>PC 抓包软件推荐<ol><li><strong>Fiddler</strong>   首推fd,mac的话可以考虑 <strong>charles</strong> , fd的强大是人尽皆知的:学习链接 – <a href="https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=1171662&amp;highlight=Fiddler">52破解基础基础</a>   <a href="https://www.52pojie.cn/home.php?mod=space&amp;uid=1075167&amp;do=thread&amp;view=me&amp;order=dateline&amp;from=space&amp;page=2">进阶教程</a></li><li><strong>charles</strong>  （也叫花瓶、青花瓷等）mac用户首推这个 , 当然win也有这个 分类很好用; <a href="https://zhuanlan.kanxue.com/article-13139.htm">看雪charles教程</a></li><li>别的没怎么用过  , 当然抓包工具还有超级多的</li></ol></li></ul><h4 id="抓包签到"><a class="markdownIt-Anchor" href="#抓包签到"></a> 抓包签到</h4><ul><li>打开你的抓包软件 , 或者手机连上你的电脑抓包软件</li><li>确定开始正常抓包后去app执行签到相关操作</li><li>返回抓包工具 , 停止抓包 , 备注刚才抓包的app 进行的操作(不能备注的也没办法)</li><li>至此,抓包结束 🔚</li></ul><h3 id="分析刚才抓的数据包"><a class="markdownIt-Anchor" href="#分析刚才抓的数据包"></a> 分析刚才抓的数据包</h3><blockquote><p>分析数据包这个东西吧  , 没法教 ,主要看自己的悟性(就是猜) , 自己的英语水平 (数据包基本没有中文,只有部分中文的提示,基本全是英语) ,  还有就是自己的经验(废话) ,我们一点点来说吧！</p></blockquote><h4 id="首先可以根据-url-链接寻找关键字进行定位-就是有根据的瞎猜"><a class="markdownIt-Anchor" href="#首先可以根据-url-链接寻找关键字进行定位-就是有根据的瞎猜"></a> 首先可以根据 <strong>url</strong> 链接,寻找关键字进行定位 📌 (就是有根据的瞎猜)</h4><ul><li>例如: 某个url如下</li><li><code>https://qualcomm.growthideadata.com/qualcomm-app/api/user/signIn?userId=xxx</code> 请你判断下这个url 是做什么工作的       <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">点击我查看答案  </button><span class="hide-content">用户登录 </span></span></li><li>我们来分析下这个 <strong>url</strong><ol><li>首先前面是固定的 <code>https://</code>  这个是 <strong>https</strong> 请求</li><li><code>qualcomm.growthideadata.com</code> 是他的域名(也就是host)</li><li><code>/user/signIn</code>  很明显就是<code>/用户/登录</code> 了鸭</li></ol></li><li>像这种的根据 <strong>url</strong> 中的英文单词来判断 这个数据包功能是 非常非常非常 常见的,因为你第一眼看到的就是这玩意了</li></ul><h4 id="然后我们还可以根据-响应体-来进行判断-请求头-请求体-响应头-响应体还不懂的自行去补课-简书"><a class="markdownIt-Anchor" href="#然后我们还可以根据-响应体-来进行判断-请求头-请求体-响应头-响应体还不懂的自行去补课-简书"></a> 然后我们还可以根据 <strong>响应体</strong> 来进行判断  (请求头  请求体 响应头 响应体还不懂的自行去补课: <a href="https://www.jianshu.com/p/eb3e5ec98a66">简书</a> )</h4><ul><li>例如: 某个响应体如下 ;</li></ul> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;code&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;success！&quot;</span>,</span><br><span class="line">  <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;coins&quot;</span>: <span class="number">5</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>请你判断下这个 响应体  可能是什么的 , 我们经常用的数据有哪些?     <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">点击我查看答案  </button><span class="hide-content">用户签到获得硬币(金币等) 常用数据:code message coins </span></span></li></ul><h4 id="我们可以根据数据包的类型来进行初步筛选"><a class="markdownIt-Anchor" href="#我们可以根据数据包的类型来进行初步筛选"></a> 我们可以根据数据包的类型来进行初步筛选</h4><ul><li>一般请求都是 <code>post</code> 或者 <code>get</code> 请求 , 我们根据数据包类型减少工作量</li><li>一般有携带账号密码信息的请求都是使用 <code>post</code> 进行的</li><li>一些简单的请求可能使用 <code>get</code></li></ul><h4 id="我们可以根据获得的数据进行搜索筛选"><a class="markdownIt-Anchor" href="#我们可以根据获得的数据进行搜索筛选"></a> 我们可以根据获得的数据进行搜索筛选</h4><ul><li>例如: 我们签到获得了5 积分 , 我们就可以直接搜索 <code>5</code> 作为关键字搜索响应体(因为这个数据是服务器发回我们的,所以搜索响应体) ; 搜索出来数据可能超级多 因为 <code>5</code> 太常见了  ;  如果 <code>33</code>  <code>78</code> 等这样的值这样搜索 效果比较好</li><li>同理，也可以进行中文的搜索筛选（效果非常不理想，很多返回都是英文的）</li></ul><h4 id="可以通过软件内的时间来进行辅助定位"><a class="markdownIt-Anchor" href="#可以通过软件内的时间来进行辅助定位"></a> 可以通过软件内的时间来进行辅助定位</h4><ul><li>例如：你签到成功后，很多软件都会给你一个积分（金币）啥的明细表，就是你什么时间，做了什么操作，然后获得了多少积分等</li><li>可以根据软件给的时间 来进行辅助定位，很多软件会精确到毫秒 ，所以这不失为一个好方法呢(<sup>o</sup>)/~</li></ul><h4 id="没有别的办法那就只能查看所有数据包慢慢寻找你要的数据包了"><a class="markdownIt-Anchor" href="#没有别的办法那就只能查看所有数据包慢慢寻找你要的数据包了"></a> 没有别的办法那就只能查看所有数据包，慢慢寻找你要的数据包了</h4><ul><li>找的过程也要慢慢积累，尽可能的搞清楚他的命名逻辑，对以后的找包速度会有明显提升</li></ul><h4 id="下面给出本次试验对象的签到数据包"><a class="markdownIt-Anchor" href="#下面给出本次试验对象的签到数据包"></a> 下面给出本次试验对象的签到数据包</h4><ul><li><img src="https://tucang.cc/api/image/show/82df2a854368991c0be59c4ac01c27de" alt="image-20220411213118940" style="zoom: 33%;" /></li></ul><h3 id="使用测试工具进行测试"><a class="markdownIt-Anchor" href="#使用测试工具进行测试"></a> 使用测试工具进行测试</h3><blockquote><p>其实这里我不知道该叫什么名字，反正我就按照我自己的理解进行教程，有不对，不合适的地方，请指出</p></blockquote><h4 id="使用抓包工具自带的软件进行测试"><a class="markdownIt-Anchor" href="#使用抓包工具自带的软件进行测试"></a> 使用抓包工具自带的软件进行测试</h4><ul><li>很多抓包工具都带有数据包 <strong>重发</strong> 功能，例如：<ul><li>安卓：小黄鸟、小蓝鸟</li><li>ios：圈x自带重放   锤子配合 anubis 网球没用过</li><li>pc： fd自带重放   花瓶（charles）都可以直接进行重放</li></ul></li><li>一般当你不能确定是否是这条数据包时，重放总是一个不错的选择！</li></ul><h4 id="使用第三方的调试工具进行测试"><a class="markdownIt-Anchor" href="#使用第三方的调试工具进行测试"></a> 使用第三方的调试工具进行测试</h4><ul><li>我比较常用的有 <strong>postman</strong>  <strong>apipost</strong>等</li><li>这里主要是进行数据的重放与必要参数的测试</li></ul><h4 id="进行数据包参数测试"><a class="markdownIt-Anchor" href="#进行数据包参数测试"></a> 进行数据包参数测试</h4><ul><li>这一步主要是确定服务器会校验那些参数，那也就是我们写脚本必须要加强关注的参数</li><li>所谓的服务器校验，也就是你发送过去后 他会判断这个参数是否正常，不正常的话一般会返回一些错误码等等</li><li>也就是说，你要保证他检验的数据一定是正确的，你才有可能签到（别的什么操作）成功</li><li>得到最简的参数时，这一步可以算完成了</li></ul><h3 id="接下来就是最后一步了我们开始写脚本吧"><a class="markdownIt-Anchor" href="#接下来就是最后一步了我们开始写脚本吧"></a> 接下来就是最后一步了，我们开始写脚本吧</h3><blockquote><p>开始写脚本之前我先声明几句</p><ol><li>我的js是自学的，难免有错误的地方</li><li>很多地方都是大佬的开源脚本修改的，可能修改的四不像，但是我用着舒服就行了</li><li>脚本我写了很多注释 // 就是双引号后面的内容，希望可以帮你可以尽快的理解这一行的作用</li><li>有任何不懂得地方，直接百度、google查一下  很快就懂了</li><li>没了没了  开始</li></ol></blockquote><ul><li>首先，脚本地址：<a href="https://raw.githubusercontent.com/yml2213/template/master/jiaocheng.js">教程</a></li><li>如果遇到任何问题，请首尝试自己解决它，这样你的成长才会更快；实在解决不了的可以群里问</li><li>啰啰嗦嗦几千字了，第一版就先这样吧</li><li>下面给懒得同学吧脚本内容搬运下，省的跳过去看了！</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 教程 </span></span><br><span class="line"><span class="comment"> * 地址： https://raw.githubusercontent.com/yml2213/template/master/jiaocheng.js</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 教程    这里是写脚本说明的地方</span></span><br><span class="line"><span class="comment"> * 本脚本仅用于学习使用请勿直接运行</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * ========= 青龙 =========</span></span><br><span class="line"><span class="comment"> * 变量格式：export jiaocheng_data=&#x27; xxxx &amp; xxx @  xxxx &amp; xxx &#x27;  多个账号用 @分割 </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> jsname = <span class="string">&quot;教程&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> $ = Env(jsname);</span><br><span class="line"><span class="keyword">const</span> notify = $.isNode() ? <span class="built_in">require</span>(<span class="string">&#x27;./sendNotify&#x27;</span>) : <span class="string">&#x27;&#x27;</span>;      <span class="comment">// 这里是 node（青龙属于node环境）通知相关的</span></span><br><span class="line"><span class="keyword">const</span> Notify = <span class="number">1</span>; <span class="comment">//0为关闭通知，1为打开通知,默认为1</span></span><br><span class="line"><span class="keyword">const</span> debug = <span class="number">1</span>; <span class="comment">//0为关闭调试，1为打开调试,默认为0</span></span><br><span class="line"><span class="comment">//////////////////////</span></span><br><span class="line"><span class="keyword">let</span> jiaocheng_data = process.env.jiaocheng_data;               <span class="comment">// 这里是 从青龙的 配置文件 读取你写的变量</span></span><br><span class="line"><span class="keyword">let</span> jiaocheng_dataArr = [];</span><br><span class="line"><span class="keyword">let</span> data = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">!(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(<span class="keyword">await</span> Envs()))  <span class="comment">//多账号分割 判断变量是否为空  初步处理多账号</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`本地脚本4-11 )`</span>);       <span class="comment">// console.log是输出信息的，可以在脚本日志中看到输出（打印）的信息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n\n=========================================    \n脚本执行 - 北京时间(UTC+8)：<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>(</span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="keyword">new</span> <span class="built_in">Date</span>().getTime() + <span class="keyword">new</span> <span class="built_in">Date</span>().getTimezoneOffset() * <span class="number">60</span> * <span class="number">1000</span> +</span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="number">8</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>).toLocaleString()&#125;</span> \n=========================================\n`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> wyy();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n=================== 共找到 <span class="subst">$&#123;jiaocheng_dataArr.length&#125;</span> 个账号 ===================`</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (debug) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`【debug】 这是你的全部账号数组:\n <span class="subst">$&#123;jiaocheng_dataArr&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; jiaocheng_dataArr.length; index++) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = index + <span class="number">1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n========= 开始【第 <span class="subst">$&#123;num&#125;</span> 个账号】=========\n`</span>)</span><br><span class="line"></span><br><span class="line">data = jiaocheng_dataArr[index].split(<span class="string">&#x27;&amp;&#x27;</span>);      <span class="comment">// 这里是分割你每个账号的每个小项   </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (debug) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n 【debug】 这是你第 <span class="subst">$&#123;num&#125;</span> 账号信息:\n <span class="subst">$&#123;data&#125;</span>\n`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里是开始做任务    需要注意的点</span></span><br><span class="line"><span class="comment">// 1. await只能运行与async函数中</span></span><br><span class="line"><span class="comment">// 2. 函数的名字不可以相同</span></span><br><span class="line"><span class="comment">//      3. 不够可以自己复制</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;开始 xx&#x27;</span>);</span><br><span class="line"><span class="keyword">await</span> signin();</span><br><span class="line"><span class="keyword">await</span> $.wait(<span class="number">2</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里是开始做任务   </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;开始 yy&#x27;</span>);</span><br><span class="line"><span class="keyword">await</span> yyyy();</span><br><span class="line"><span class="keyword">await</span> $.wait(<span class="number">2</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里是开始做任务   </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;开始 zz&#x27;</span>);</span><br><span class="line"><span class="keyword">await</span> zzzzz();</span><br><span class="line"><span class="keyword">await</span> $.wait(<span class="number">2</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> SendMsg(msg);    <span class="comment">// 与发送通知有关系</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br><span class="line">.catch(<span class="function">(<span class="params">e</span>) =&gt;</span> <span class="built_in">console</span>.logErr(e))</span><br><span class="line">.finally(<span class="function">() =&gt;</span> $.done())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 签到  骁友会</span></span><br><span class="line"><span class="comment"> * 下面我们来看看函数需要注意的东西吧</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">signin</span>(<span class="params">timeout = <span class="number">3</span> * <span class="number">1000</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> url = &#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">`https://qualcomm.growthideadata.com/qualcomm-app/api/user/signIn?userId=<span class="subst">$&#123;data[<span class="number">1</span>]&#125;</span>`</span>,    <span class="comment">// 这是请求的 url 可以直接用我们抓包、精简后的URL</span></span><br><span class="line"><span class="attr">headers</span>: &#123;            <span class="comment">// headers 是请求体  可以直接用精简后的 hd  也就是服务器校验的部分，他需要啥，我们就给他啥  </span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;userId&quot;</span>: data[<span class="number">1</span>],</span><br><span class="line"><span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded;charset=UTF-8&quot;</span>,</span><br><span class="line"><span class="string">&quot;Host&quot;</span>: <span class="string">&quot;qualcomm.growthideadata.com&quot;</span>,</span><br><span class="line"><span class="string">&quot;User-Agent&quot;</span>: UA,</span><br><span class="line"><span class="string">&quot;sessionKey&quot;</span>: data[<span class="number">0</span>],</span><br><span class="line"><span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://servicewechat.com/wx026c06df6adc5d06/176/page-frame.html&quot;</span>,</span><br><span class="line"><span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// body: &#x27;&#x27;,       // 这是一个 get 请求，没有请求体 body   如果是 post 不要忘记他鸭！</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (debug) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n【debug】=============== 这是 签到 请求 url ===============`</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(url));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$.get(url, <span class="keyword">async</span> (error, response, data) =&gt; &#123;     <span class="comment">// 这是一个 get 请求 , 如果是 post  记得把这里改了 </span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (debug) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n\n【debug】===============这是 签到 返回data==============`</span>);</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = <span class="built_in">JSON</span>.parse(data);</span><br><span class="line"><span class="keyword">if</span> (result.code == <span class="number">200</span>) &#123;        <span class="comment">// 这里是根据服务器返回的数据做判断  方便我们知道任务是否完成了</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`【签到】<span class="subst">$&#123;result.message&#125;</span> 🎉 `</span>)</span><br><span class="line">msg += <span class="string">`\n【签到】<span class="subst">$&#123;result.message&#125;</span> 🎉`</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (result.code === <span class="number">1</span>) &#123;    <span class="comment">// 这里是根据服务器返回的数据做判断  方便我们知道任务是否完成了</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n【签到】 失败 ,可能是:<span class="subst">$&#123;result.message&#125;</span>!\n `</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (result.code === <span class="number">40001</span>) &#123;   <span class="comment">// 这里是根据服务器返回的数据做判断  方便我们知道任务是否完成了</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n【签到】 失败 ,可能是:<span class="subst">$&#123;result.message&#125;</span>!\n `</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    <span class="comment">// 这里是根据服务器返回的数据做判断  方便我们知道任务是否完成了</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n【签到】 失败 ❌ 了呢,可能是网络被外星人抓走了!\n `</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(e)</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">resolve();</span><br><span class="line">&#125;</span><br><span class="line">&#125;, timeout)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果有更多的需求，直接复制上一个函数，改个名   然后稍微更改一下内容   就可以用了   </span></span><br><span class="line"><span class="comment">// 不要忘记与上面的 函数调用对应起来鸭</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#region 固定代码 可以不管他</span></span><br><span class="line"><span class="comment">// ============================================变量检查============================================ \\</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">Envs</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (jiaocheng_data) &#123;</span><br><span class="line"><span class="keyword">if</span> (jiaocheng_data.indexOf(<span class="string">&quot;@&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">jiaocheng_data.split(<span class="string">&quot;@&quot;</span>).forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">jiaocheng_dataArr.push(item);</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">jiaocheng_dataArr.push(jiaocheng_data);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n 【<span class="subst">$&#123;$.name&#125;</span>】：未填写变量 jiaocheng_data`</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ============================================发送消息============================================ \\</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">SendMsg</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!message)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Notify &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> ($.isNode()) &#123;</span><br><span class="line"><span class="keyword">var</span> notify = <span class="built_in">require</span>(<span class="string">&#x27;./sendNotify&#x27;</span>);</span><br><span class="line"><span class="keyword">await</span> notify.sendNotify($.name, message);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$.msg(message);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(message);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 随机数生成</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomString</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">e = e || <span class="number">32</span>;</span><br><span class="line"><span class="keyword">var</span> t = <span class="string">&quot;QWERTYUIOPASDFGHJKLZXCVBNM1234567890&quot;</span>,</span><br><span class="line">a = t.length,</span><br><span class="line">n = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; e; i++)</span><br><span class="line">n += t.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * a));</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 随机整数生成</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomInt</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * (max - min) + min)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每日网抑云</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wyy</span>(<span class="params">timeout = <span class="number">3</span> * <span class="number">1000</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> url = &#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">`https://keai.icu/apiwyy/api`</span></span><br><span class="line">&#125;</span><br><span class="line">$.get(url, <span class="keyword">async</span> (err, resp, data) =&gt; &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">data = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`\n 【网抑云时间】: <span class="subst">$&#123;data.content&#125;</span>  by--<span class="subst">$&#123;data.music&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.logErr(e, resp);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">resolve()</span><br><span class="line">&#125;</span><br><span class="line">&#125;, timeout)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#endregion</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// prettier-ignore   固定代码  不用管他</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Env</span>(<span class="params">t, e</span>) </span>&#123; <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> process &amp;&amp; <span class="built_in">JSON</span>.stringify(process.env).indexOf(<span class="string">&quot;GITHUB&quot;</span>) &gt; -<span class="number">1</span> &amp;&amp; process.exit(<span class="number">0</span>); <span class="class"><span class="keyword">class</span> <span class="title">s</span> </span>&#123; <span class="function"><span class="title">constructor</span>(<span class="params">t</span>)</span> &#123; <span class="built_in">this</span>.env = t &#125; <span class="function"><span class="title">send</span>(<span class="params">t, e = <span class="string">&quot;GET&quot;</span></span>)</span> &#123; t = <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t ? &#123; <span class="attr">url</span>: t &#125; : t; <span class="keyword">let</span> s = <span class="built_in">this</span>.get; <span class="keyword">return</span> <span class="string">&quot;POST&quot;</span> === e &amp;&amp; (s = <span class="built_in">this</span>.post), <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123; s.call(<span class="built_in">this</span>, t, <span class="function">(<span class="params">t, s, r</span>) =&gt;</span> &#123; t ? i(t) : e(s) &#125;) &#125;) &#125; <span class="function"><span class="title">get</span>(<span class="params">t</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.send.call(<span class="built_in">this</span>.env, t) &#125; <span class="function"><span class="title">post</span>(<span class="params">t</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.send.call(<span class="built_in">this</span>.env, t, <span class="string">&quot;POST&quot;</span>) &#125; &#125; <span class="keyword">return</span> <span class="keyword">new</span> <span class="class"><span class="keyword">class</span> </span>&#123; <span class="function"><span class="title">constructor</span>(<span class="params">t, e</span>)</span> &#123; <span class="built_in">this</span>.name = t, <span class="built_in">this</span>.http = <span class="keyword">new</span> s(<span class="built_in">this</span>), <span class="built_in">this</span>.data = <span class="literal">null</span>, <span class="built_in">this</span>.dataFile = <span class="string">&quot;box.dat&quot;</span>, <span class="built_in">this</span>.logs = [], <span class="built_in">this</span>.isMute = !<span class="number">1</span>, <span class="built_in">this</span>.isNeedRewrite = !<span class="number">1</span>, <span class="built_in">this</span>.logSeparator = <span class="string">&quot;\n&quot;</span>, <span class="built_in">this</span>.startTime = (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime(), <span class="built_in">Object</span>.assign(<span class="built_in">this</span>, e), <span class="built_in">this</span>.log(<span class="string">&quot;&quot;</span>, <span class="string">`🔔<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>, 开始!`</span>) &#125; <span class="function"><span class="title">isNode</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> <span class="built_in">module</span> &amp;&amp; !!<span class="built_in">module</span>.exports &#125; <span class="function"><span class="title">isQuanX</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> $task &#125; <span class="function"><span class="title">isSurge</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> $httpClient &amp;&amp; <span class="string">&quot;undefined&quot;</span> == <span class="keyword">typeof</span> $loon &#125; <span class="function"><span class="title">isLoon</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> $loon &#125; <span class="function"><span class="title">toObj</span>(<span class="params">t, e = <span class="literal">null</span></span>)</span> &#123; <span class="keyword">try</span> &#123; <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(t) &#125; <span class="keyword">catch</span> &#123; <span class="keyword">return</span> e &#125; &#125; <span class="function"><span class="title">toStr</span>(<span class="params">t, e = <span class="literal">null</span></span>)</span> &#123; <span class="keyword">try</span> &#123; <span class="keyword">return</span> <span class="built_in">JSON</span>.stringify(t) &#125; <span class="keyword">catch</span> &#123; <span class="keyword">return</span> e &#125; &#125; <span class="function"><span class="title">getjson</span>(<span class="params">t, e</span>)</span> &#123; <span class="keyword">let</span> s = e; <span class="keyword">const</span> i = <span class="built_in">this</span>.getdata(t); <span class="keyword">if</span> (i) <span class="keyword">try</span> &#123; s = <span class="built_in">JSON</span>.parse(<span class="built_in">this</span>.getdata(t)) &#125; <span class="keyword">catch</span> &#123; &#125; <span class="keyword">return</span> s &#125; <span class="function"><span class="title">setjson</span>(<span class="params">t, e</span>)</span> &#123; <span class="keyword">try</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.setdata(<span class="built_in">JSON</span>.stringify(t), e) &#125; <span class="keyword">catch</span> &#123; <span class="keyword">return</span> !<span class="number">1</span> &#125; &#125; <span class="function"><span class="title">getScript</span>(<span class="params">t</span>)</span> &#123; <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">e</span> =&gt;</span> &#123; <span class="built_in">this</span>.get(&#123; <span class="attr">url</span>: t &#125;, <span class="function">(<span class="params">t, s, i</span>) =&gt;</span> e(i)) &#125;) &#125; <span class="function"><span class="title">runScript</span>(<span class="params">t, e</span>)</span> &#123; <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">s</span> =&gt;</span> &#123; <span class="keyword">let</span> i = <span class="built_in">this</span>.getdata(<span class="string">&quot;@chavy_boxjs_userCfgs.httpapi&quot;</span>); i = i ? i.replace(<span class="regexp">/\n/g</span>, <span class="string">&quot;&quot;</span>).trim() : i; <span class="keyword">let</span> r = <span class="built_in">this</span>.getdata(<span class="string">&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;</span>); r = r ? <span class="number">1</span> * r : <span class="number">20</span>, r = e &amp;&amp; e.timeout ? e.timeout : r; <span class="keyword">const</span> [o, h] = i.split(<span class="string">&quot;@&quot;</span>), n = &#123; <span class="attr">url</span>: <span class="string">`http://<span class="subst">$&#123;h&#125;</span>/v1/scripting/evaluate`</span>, <span class="attr">body</span>: &#123; <span class="attr">script_text</span>: t, <span class="attr">mock_type</span>: <span class="string">&quot;cron&quot;</span>, <span class="attr">timeout</span>: r &#125;, <span class="attr">headers</span>: &#123; <span class="string">&quot;X-Key&quot;</span>: o, <span class="attr">Accept</span>: <span class="string">&quot;*/*&quot;</span> &#125; &#125;; <span class="built_in">this</span>.post(n, <span class="function">(<span class="params">t, e, i</span>) =&gt;</span> s(i)) &#125;).catch(<span class="function"><span class="params">t</span> =&gt;</span> <span class="built_in">this</span>.logErr(t)) &#125; <span class="function"><span class="title">loaddata</span>(<span class="params"></span>)</span> &#123; <span class="keyword">if</span> (!<span class="built_in">this</span>.isNode()) <span class="keyword">return</span> &#123;&#125;; &#123; <span class="built_in">this</span>.fs = <span class="built_in">this</span>.fs ? <span class="built_in">this</span>.fs : <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>), <span class="built_in">this</span>.path = <span class="built_in">this</span>.path ? <span class="built_in">this</span>.path : <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>); <span class="keyword">const</span> t = <span class="built_in">this</span>.path.resolve(<span class="built_in">this</span>.dataFile), e = <span class="built_in">this</span>.path.resolve(process.cwd(), <span class="built_in">this</span>.dataFile), s = <span class="built_in">this</span>.fs.existsSync(t), i = !s &amp;&amp; <span class="built_in">this</span>.fs.existsSync(e); <span class="keyword">if</span> (!s &amp;&amp; !i) <span class="keyword">return</span> &#123;&#125;; &#123; <span class="keyword">const</span> i = s ? t : e; <span class="keyword">try</span> &#123; <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(<span class="built_in">this</span>.fs.readFileSync(i)) &#125; <span class="keyword">catch</span> (t) &#123; <span class="keyword">return</span> &#123;&#125; &#125; &#125; &#125; &#125; <span class="function"><span class="title">writedata</span>(<span class="params"></span>)</span> &#123; <span class="keyword">if</span> (<span class="built_in">this</span>.isNode()) &#123; <span class="built_in">this</span>.fs = <span class="built_in">this</span>.fs ? <span class="built_in">this</span>.fs : <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>), <span class="built_in">this</span>.path = <span class="built_in">this</span>.path ? <span class="built_in">this</span>.path : <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>); <span class="keyword">const</span> t = <span class="built_in">this</span>.path.resolve(<span class="built_in">this</span>.dataFile), e = <span class="built_in">this</span>.path.resolve(process.cwd(), <span class="built_in">this</span>.dataFile), s = <span class="built_in">this</span>.fs.existsSync(t), i = !s &amp;&amp; <span class="built_in">this</span>.fs.existsSync(e), r = <span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.data); s ? <span class="built_in">this</span>.fs.writeFileSync(t, r) : i ? <span class="built_in">this</span>.fs.writeFileSync(e, r) : <span class="built_in">this</span>.fs.writeFileSync(t, r) &#125; &#125; <span class="function"><span class="title">lodash_get</span>(<span class="params">t, e, s</span>)</span> &#123; <span class="keyword">const</span> i = e.replace(<span class="regexp">/\[(\d+)\]/g</span>, <span class="string">&quot;.$1&quot;</span>).split(<span class="string">&quot;.&quot;</span>); <span class="keyword">let</span> r = t; <span class="keyword">for</span> (<span class="keyword">const</span> t <span class="keyword">of</span> i) <span class="keyword">if</span> (r = <span class="built_in">Object</span>(r)[t], <span class="keyword">void</span> <span class="number">0</span> === r) <span class="keyword">return</span> s; <span class="keyword">return</span> r &#125; <span class="function"><span class="title">lodash_set</span>(<span class="params">t, e, s</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">Object</span>(t) !== t ? t : (<span class="built_in">Array</span>.isArray(e) || (e = e.toString().match(<span class="regexp">/[^.[\]]+/g</span>) || []), e.slice(<span class="number">0</span>, -<span class="number">1</span>).reduce(<span class="function">(<span class="params">t, s, i</span>) =&gt;</span> <span class="built_in">Object</span>(t[s]) === t[s] ? t[s] : t[s] = <span class="built_in">Math</span>.abs(e[i + <span class="number">1</span>]) &gt;&gt; <span class="number">0</span> == +e[i + <span class="number">1</span>] ? [] : &#123;&#125;, t)[e[e.length - <span class="number">1</span>]] = s, t) &#125; <span class="function"><span class="title">getdata</span>(<span class="params">t</span>)</span> &#123; <span class="keyword">let</span> e = <span class="built_in">this</span>.getval(t); <span class="keyword">if</span> (<span class="regexp">/^@/</span>.test(t)) &#123; <span class="keyword">const</span> [, s, i] = <span class="regexp">/^@(.*?)\.(.*?)$/</span>.exec(t), r = s ? <span class="built_in">this</span>.getval(s) : <span class="string">&quot;&quot;</span>; <span class="keyword">if</span> (r) <span class="keyword">try</span> &#123; <span class="keyword">const</span> t = <span class="built_in">JSON</span>.parse(r); e = t ? <span class="built_in">this</span>.lodash_get(t, i, <span class="string">&quot;&quot;</span>) : e &#125; <span class="keyword">catch</span> (t) &#123; e = <span class="string">&quot;&quot;</span> &#125; &#125; <span class="keyword">return</span> e &#125; <span class="function"><span class="title">setdata</span>(<span class="params">t, e</span>)</span> &#123; <span class="keyword">let</span> s = !<span class="number">1</span>; <span class="keyword">if</span> (<span class="regexp">/^@/</span>.test(e)) &#123; <span class="keyword">const</span> [, i, r] = <span class="regexp">/^@(.*?)\.(.*?)$/</span>.exec(e), o = <span class="built_in">this</span>.getval(i), h = i ? <span class="string">&quot;null&quot;</span> === o ? <span class="literal">null</span> : o || <span class="string">&quot;&#123;&#125;&quot;</span> : <span class="string">&quot;&#123;&#125;&quot;</span>; <span class="keyword">try</span> &#123; <span class="keyword">const</span> e = <span class="built_in">JSON</span>.parse(h); <span class="built_in">this</span>.lodash_set(e, r, t), s = <span class="built_in">this</span>.setval(<span class="built_in">JSON</span>.stringify(e), i) &#125; <span class="keyword">catch</span> (e) &#123; <span class="keyword">const</span> o = &#123;&#125;; <span class="built_in">this</span>.lodash_set(o, r, t), s = <span class="built_in">this</span>.setval(<span class="built_in">JSON</span>.stringify(o), i) &#125; &#125; <span class="keyword">else</span> s = <span class="built_in">this</span>.setval(t, e); <span class="keyword">return</span> s &#125; <span class="function"><span class="title">getval</span>(<span class="params">t</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.isSurge() || <span class="built_in">this</span>.isLoon() ? $persistentStore.read(t) : <span class="built_in">this</span>.isQuanX() ? $prefs.valueForKey(t) : <span class="built_in">this</span>.isNode() ? (<span class="built_in">this</span>.data = <span class="built_in">this</span>.loaddata(), <span class="built_in">this</span>.data[t]) : <span class="built_in">this</span>.data &amp;&amp; <span class="built_in">this</span>.data[t] || <span class="literal">null</span> &#125; <span class="function"><span class="title">setval</span>(<span class="params">t, e</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.isSurge() || <span class="built_in">this</span>.isLoon() ? $persistentStore.write(t, e) : <span class="built_in">this</span>.isQuanX() ? $prefs.setValueForKey(t, e) : <span class="built_in">this</span>.isNode() ? (<span class="built_in">this</span>.data = <span class="built_in">this</span>.loaddata(), <span class="built_in">this</span>.data[e] = t, <span class="built_in">this</span>.writedata(), !<span class="number">0</span>) : <span class="built_in">this</span>.data &amp;&amp; <span class="built_in">this</span>.data[e] || <span class="literal">null</span> &#125; <span class="function"><span class="title">initGotEnv</span>(<span class="params">t</span>)</span> &#123; <span class="built_in">this</span>.got = <span class="built_in">this</span>.got ? <span class="built_in">this</span>.got : <span class="built_in">require</span>(<span class="string">&quot;got&quot;</span>), <span class="built_in">this</span>.cktough = <span class="built_in">this</span>.cktough ? <span class="built_in">this</span>.cktough : <span class="built_in">require</span>(<span class="string">&quot;tough-cookie&quot;</span>), <span class="built_in">this</span>.ckjar = <span class="built_in">this</span>.ckjar ? <span class="built_in">this</span>.ckjar : <span class="keyword">new</span> <span class="built_in">this</span>.cktough.CookieJar, t &amp;&amp; (t.headers = t.headers ? t.headers : &#123;&#125;, <span class="keyword">void</span> <span class="number">0</span> === t.headers.Cookie &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> === t.cookieJar &amp;&amp; (t.cookieJar = <span class="built_in">this</span>.ckjar)) &#125; <span class="function"><span class="title">get</span>(<span class="params">t, e = (() =&gt; &#123; &#125;)</span>)</span> &#123; t.headers &amp;&amp; (<span class="keyword">delete</span> t.headers[<span class="string">&quot;Content-Type&quot;</span>], <span class="keyword">delete</span> t.headers[<span class="string">&quot;Content-Length&quot;</span>]), <span class="built_in">this</span>.isSurge() || <span class="built_in">this</span>.isLoon() ? (<span class="built_in">this</span>.isSurge() &amp;&amp; <span class="built_in">this</span>.isNeedRewrite &amp;&amp; (t.headers = t.headers || &#123;&#125;, <span class="built_in">Object</span>.assign(t.headers, &#123; <span class="string">&quot;X-Surge-Skip-Scripting&quot;</span>: !<span class="number">1</span> &#125;)), $httpClient.get(t, <span class="function">(<span class="params">t, s, i</span>) =&gt;</span> &#123; !t &amp;&amp; s &amp;&amp; (s.body = i, s.statusCode = s.status), e(t, s, i) &#125;)) : <span class="built_in">this</span>.isQuanX() ? (<span class="built_in">this</span>.isNeedRewrite &amp;&amp; (t.opts = t.opts || &#123;&#125;, <span class="built_in">Object</span>.assign(t.opts, &#123; <span class="attr">hints</span>: !<span class="number">1</span> &#125;)), $task.fetch(t).then(<span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">const</span> &#123; <span class="attr">statusCode</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125; = t; e(<span class="literal">null</span>, &#123; <span class="attr">status</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125;, o) &#125;, <span class="function"><span class="params">t</span> =&gt;</span> e(t))) : <span class="built_in">this</span>.isNode() &amp;&amp; (<span class="built_in">this</span>.initGotEnv(t), <span class="built_in">this</span>.got(t).on(<span class="string">&quot;redirect&quot;</span>, <span class="function">(<span class="params">t, e</span>) =&gt;</span> &#123; <span class="keyword">try</span> &#123; <span class="keyword">if</span> (t.headers[<span class="string">&quot;set-cookie&quot;</span>]) &#123; <span class="keyword">const</span> s = t.headers[<span class="string">&quot;set-cookie&quot;</span>].map(<span class="built_in">this</span>.cktough.Cookie.parse).toString(); s &amp;&amp; <span class="built_in">this</span>.ckjar.setCookieSync(s, <span class="literal">null</span>), e.cookieJar = <span class="built_in">this</span>.ckjar &#125; &#125; <span class="keyword">catch</span> (t) &#123; <span class="built_in">this</span>.logErr(t) &#125; &#125;).then(<span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">const</span> &#123; <span class="attr">statusCode</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125; = t; e(<span class="literal">null</span>, &#123; <span class="attr">status</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125;, o) &#125;, <span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">const</span> &#123; <span class="attr">message</span>: s, <span class="attr">response</span>: i &#125; = t; e(s, i, i &amp;&amp; i.body) &#125;)) &#125; <span class="function"><span class="title">post</span>(<span class="params">t, e = (() =&gt; &#123; &#125;)</span>)</span> &#123; <span class="keyword">if</span> (t.body &amp;&amp; t.headers &amp;&amp; !t.headers[<span class="string">&quot;Content-Type&quot;</span>] &amp;&amp; (t.headers[<span class="string">&quot;Content-Type&quot;</span>] = <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>), t.headers &amp;&amp; <span class="keyword">delete</span> t.headers[<span class="string">&quot;Content-Length&quot;</span>], <span class="built_in">this</span>.isSurge() || <span class="built_in">this</span>.isLoon()) <span class="built_in">this</span>.isSurge() &amp;&amp; <span class="built_in">this</span>.isNeedRewrite &amp;&amp; (t.headers = t.headers || &#123;&#125;, <span class="built_in">Object</span>.assign(t.headers, &#123; <span class="string">&quot;X-Surge-Skip-Scripting&quot;</span>: !<span class="number">1</span> &#125;)), $httpClient.post(t, <span class="function">(<span class="params">t, s, i</span>) =&gt;</span> &#123; !t &amp;&amp; s &amp;&amp; (s.body = i, s.statusCode = s.status), e(t, s, i) &#125;); <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.isQuanX()) t.method = <span class="string">&quot;POST&quot;</span>, <span class="built_in">this</span>.isNeedRewrite &amp;&amp; (t.opts = t.opts || &#123;&#125;, <span class="built_in">Object</span>.assign(t.opts, &#123; <span class="attr">hints</span>: !<span class="number">1</span> &#125;)), $task.fetch(t).then(<span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">const</span> &#123; <span class="attr">statusCode</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125; = t; e(<span class="literal">null</span>, &#123; <span class="attr">status</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125;, o) &#125;, <span class="function"><span class="params">t</span> =&gt;</span> e(t)); <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.isNode()) &#123; <span class="built_in">this</span>.initGotEnv(t); <span class="keyword">const</span> &#123; <span class="attr">url</span>: s, ...i &#125; = t; <span class="built_in">this</span>.got.post(s, i).then(<span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">const</span> &#123; <span class="attr">statusCode</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125; = t; e(<span class="literal">null</span>, &#123; <span class="attr">status</span>: s, <span class="attr">statusCode</span>: i, <span class="attr">headers</span>: r, <span class="attr">body</span>: o &#125;, o) &#125;, <span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">const</span> &#123; <span class="attr">message</span>: s, <span class="attr">response</span>: i &#125; = t; e(s, i, i &amp;&amp; i.body) &#125;) &#125; &#125; <span class="function"><span class="title">time</span>(<span class="params">t, e = <span class="literal">null</span></span>)</span> &#123; <span class="keyword">const</span> s = e ? <span class="keyword">new</span> <span class="built_in">Date</span>(e) : <span class="keyword">new</span> <span class="built_in">Date</span>; <span class="keyword">let</span> i = &#123; <span class="string">&quot;M+&quot;</span>: s.getMonth() + <span class="number">1</span>, <span class="string">&quot;d+&quot;</span>: s.getDate(), <span class="string">&quot;H+&quot;</span>: s.getHours(), <span class="string">&quot;m+&quot;</span>: s.getMinutes(), <span class="string">&quot;s+&quot;</span>: s.getSeconds(), <span class="string">&quot;q+&quot;</span>: <span class="built_in">Math</span>.floor((s.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="attr">S</span>: s.getMilliseconds() &#125;; <span class="regexp">/(y+)/</span>.test(t) &amp;&amp; (t = t.replace(<span class="built_in">RegExp</span>.$1, (s.getFullYear() + <span class="string">&quot;&quot;</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$1.length))); <span class="keyword">for</span> (<span class="keyword">let</span> e <span class="keyword">in</span> i) <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(&quot;</span> + e + <span class="string">&quot;)&quot;</span>).test(t) &amp;&amp; (t = t.replace(<span class="built_in">RegExp</span>.$1, <span class="number">1</span> == <span class="built_in">RegExp</span>.$1.length ? i[e] : (<span class="string">&quot;00&quot;</span> + i[e]).substr((<span class="string">&quot;&quot;</span> + i[e]).length))); <span class="keyword">return</span> t &#125; <span class="function"><span class="title">msg</span>(<span class="params">e = t, s = <span class="string">&quot;&quot;</span>, i = <span class="string">&quot;&quot;</span>, r</span>)</span> &#123; <span class="keyword">const</span> o = <span class="function"><span class="params">t</span> =&gt;</span> &#123; <span class="keyword">if</span> (!t) <span class="keyword">return</span> t; <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t) <span class="keyword">return</span> <span class="built_in">this</span>.isLoon() ? t : <span class="built_in">this</span>.isQuanX() ? &#123; <span class="string">&quot;open-url&quot;</span>: t &#125; : <span class="built_in">this</span>.isSurge() ? &#123; <span class="attr">url</span>: t &#125; : <span class="keyword">void</span> <span class="number">0</span>; <span class="keyword">if</span> (<span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> t) &#123; <span class="keyword">if</span> (<span class="built_in">this</span>.isLoon()) &#123; <span class="keyword">let</span> e = t.openUrl || t.url || t[<span class="string">&quot;open-url&quot;</span>], s = t.mediaUrl || t[<span class="string">&quot;media-url&quot;</span>]; <span class="keyword">return</span> &#123; <span class="attr">openUrl</span>: e, <span class="attr">mediaUrl</span>: s &#125; &#125; <span class="keyword">if</span> (<span class="built_in">this</span>.isQuanX()) &#123; <span class="keyword">let</span> e = t[<span class="string">&quot;open-url&quot;</span>] || t.url || t.openUrl, s = t[<span class="string">&quot;media-url&quot;</span>] || t.mediaUrl; <span class="keyword">return</span> &#123; <span class="string">&quot;open-url&quot;</span>: e, <span class="string">&quot;media-url&quot;</span>: s &#125; &#125; <span class="keyword">if</span> (<span class="built_in">this</span>.isSurge()) &#123; <span class="keyword">let</span> e = t.url || t.openUrl || t[<span class="string">&quot;open-url&quot;</span>]; <span class="keyword">return</span> &#123; <span class="attr">url</span>: e &#125; &#125; &#125; &#125;; <span class="keyword">if</span> (<span class="built_in">this</span>.isMute || (<span class="built_in">this</span>.isSurge() || <span class="built_in">this</span>.isLoon() ? $notification.post(e, s, i, o(r)) : <span class="built_in">this</span>.isQuanX() &amp;&amp; $notify(e, s, i, o(r))), !<span class="built_in">this</span>.isMuteLog) &#123; <span class="keyword">let</span> t = [<span class="string">&quot;&quot;</span>, <span class="string">&quot;==============📣系统通知📣==============&quot;</span>]; t.push(e), s &amp;&amp; t.push(s), i &amp;&amp; t.push(i), <span class="built_in">console</span>.log(t.join(<span class="string">&quot;\n&quot;</span>)), <span class="built_in">this</span>.logs = <span class="built_in">this</span>.logs.concat(t) &#125; &#125; <span class="function"><span class="title">log</span>(<span class="params">...t</span>)</span> &#123; t.length &gt; <span class="number">0</span> &amp;&amp; (<span class="built_in">this</span>.logs = [...this.logs, ...t]), <span class="built_in">console</span>.log(t.join(<span class="built_in">this</span>.logSeparator)) &#125; <span class="function"><span class="title">logErr</span>(<span class="params">t, e</span>)</span> &#123; <span class="keyword">const</span> s = !<span class="built_in">this</span>.isSurge() &amp;&amp; !<span class="built_in">this</span>.isQuanX() &amp;&amp; !<span class="built_in">this</span>.isLoon(); s ? <span class="built_in">this</span>.log(<span class="string">&quot;&quot;</span>, <span class="string">`❗️<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>, 错误!`</span>, t.stack) : <span class="built_in">this</span>.log(<span class="string">&quot;&quot;</span>, <span class="string">`❗️<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>, 错误!`</span>, t) &#125; <span class="function"><span class="title">wait</span>(<span class="params">t</span>)</span> &#123; <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">e</span> =&gt;</span> <span class="built_in">setTimeout</span>(e, t)) &#125; <span class="function"><span class="title">done</span>(<span class="params">t = &#123;&#125;</span>)</span> &#123; <span class="keyword">const</span> e = (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime(), s = (e - <span class="built_in">this</span>.startTime) / <span class="number">1e3</span>; <span class="built_in">this</span>.log(<span class="string">&quot;&quot;</span>, <span class="string">`🔔<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>, 结束! 🕛 <span class="subst">$&#123;s&#125;</span> 秒`</span>), <span class="built_in">this</span>.log(), (<span class="built_in">this</span>.isSurge() || <span class="built_in">this</span>.isQuanX() || <span class="built_in">this</span>.isLoon()) &amp;&amp; $done(t) &#125; &#125;(t, e) &#125;</span><br></pre></td></tr></table></figure><h2 id="你竟然还能看到这里"><a class="markdownIt-Anchor" href="#你竟然还能看到这里"></a> 你竟然还能看到这里</h2><ul><li>没想到你竟然还能看到这里，那不点击一下下面的赞赏？</li><li>偷偷告诉你  赞赏的点击彩蛋 我能玩一天</li><li>不信试试吧!</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="脚本" scheme="https://ymlclub.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="JavaScript" scheme="https://ymlclub.cn/tags/JavaScript/"/>
    
    <category term="教程" scheme="https://ymlclub.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="小白适合" scheme="https://ymlclub.cn/tags/%E5%B0%8F%E7%99%BD%E9%80%82%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>通过浏览器获取cookie</title>
    <link href="https://ymlclub.cn/2022020945082/"/>
    <id>https://ymlclub.cn/2022020945082/</id>
    <published>2022-02-09T10:00:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="通过浏览器获取-cookie-的方法"><a class="markdownIt-Anchor" href="#通过浏览器获取-cookie-的方法"></a> 通过浏览器获取 cookie 的方法</h1><p><strong>背景</strong>:回归初心，用老路子抓 cookie，其实也只是稍微麻烦了一点，至少管用。大部分玩家应该是知道的，这个帖子主要是给小白玩家们看的。其实方法有很多，我只是介绍了一种，装个插件是觉得看起来舒服点。</p><h2 id="解题思路"><a class="markdownIt-Anchor" href="#解题思路"></a> <strong>解题思路：</strong></h2><ol><li>浏览器登录要抓 ck 的网址：举例 <a href="http://m.jd.com/">http://m.jd.com</a></li><li>手机 📱 验证码登录</li><li>插件搜索 “pt”，找到&quot;pt_pin&quot;和&quot;pt_key&quot;,然后按照一下格式拼接: <strong>pt_key=XXXXX;pt_pin=XXXXXX;</strong> 注意两个分号,不要漏掉</li></ol><ul><li><p>偷小姐姐的图,懒得自己搞了</p></li><li><p>老规矩，上图文教程。</p></li><li><p>本文以 Chrome 浏览器为例，理论上其他浏览器也通用，举一反三一下，我懒得试了。没有网络环境的，去试下微软的 edge 吧。</p></li></ul><h2 id="插件版优点就是容易找也可以无痕模式下启用"><a class="markdownIt-Anchor" href="#插件版优点就是容易找也可以无痕模式下启用"></a> 插件版（优点就是容易找，也可以无痕模式下启用）</h2><p>注意：如果多个账号，一定不要点退出登录。直接关闭网页，清除浏览器 cookie 数据，重新进入网页登录下一个账号。退出会导致刚刚获取的 ck 失效。</p><h4 id="1-安装-editthiscookie-插件"><a class="markdownIt-Anchor" href="#1-安装-editthiscookie-插件"></a> 1、安装 EditThisCookie 插件</h4><p>网上应用店搜 EditThisCookie，然后安装(三选一即可)。知道你们懒，戳它吧</p><ul><li><p>Google 商店:<a href="https://chrome.google.com/webstore/search/EditThisCookie?utm_source=chrome-ntp-icon">EditThisCookie</a></p></li><li><p>GitHub : <a href="https://github.com/ETCExtensions/Edit-This-Cookie/releases/tag/1.5.0">https://github.com/ETCExtensions/Edit-This-Cookie/releases/tag/1.5.0</a></p></li><li><p>蓝奏云: <a href="https://wwz.lanzouo.com/iNAqNzsfmlg">https://wwz.lanzouo.com/iNAqNzsfmlg</a></p></li><li><p>github 和蓝奏云的需要自己解压,然后浏览器打开&quot;<strong>更多工具</strong>&quot; — “<strong>拓展程序</strong>” —’‘<strong>开发者模式</strong>’’,然后’‘<strong>加载已解压拓展</strong>’’,然后选择解压后的目录</p></li><li><p><img src="https://tucang.cc/api/image/show/c5ec9b1bc329305cc70efa808b74c81b" alt="image-20220209092413343" /></p></li><li><p>点击详情, 然后打开 “在无痕模式下使用即可”<img src="https://tucang.cc/api/image/show/9ada08b4550d3717ff26e7938fd0fdd7" alt="image-20220209092556575" /></p></li></ul><h4 id="2-打开相关网址进行登录"><a class="markdownIt-Anchor" href="#2-打开相关网址进行登录"></a> 2、打开相关网址进行登录：</h4><p>无痕模式下打开网址：<a href="http://m.jd.com/">http://m.jd.com</a></p><h4 id="3-点击浏览器右上角的插件图标搜索pt-找到pt_pin和pt_key"><a class="markdownIt-Anchor" href="#3-点击浏览器右上角的插件图标搜索pt-找到pt_pin和pt_key"></a> 3、点击浏览器右上角的插件图标，搜索&quot;pt&quot;, 找到&quot;pt_pin&quot;和&quot;pt_key&quot;</h4><p>​ 按照一下格式拼接: <strong>pt_key=XXXXX;pt_pin=XXXXXX;</strong> 注意两个分号,不要漏掉,然后发给机器人即可</p><h1 id="手机客户端版alook-浏览器安卓免费ios-6-元"><a class="markdownIt-Anchor" href="#手机客户端版alook-浏览器安卓免费ios-6-元"></a> 手机客户端版：Alook 浏览器（安卓免费，ios 6 元）</h1><h3 id="1-下载-安装-alook-浏览器酷安下载直达alook"><a class="markdownIt-Anchor" href="#1-下载-安装-alook-浏览器酷安下载直达alook"></a> 1、下载 ⏬ 安装 Alook 浏览器：酷安下载直达?<a href="https://www.coolapk.com/apk/alook.browser">Alook</a></h3><h3 id="2-浏览器登录网址mjdcom我的浏览器底部中间-向右划到第-2-页-工具箱-开发者工具-选择-cookies-拷贝-然后随便粘贴到一个地方找pt_pin和pt_key按照一下格式拼接-pt_keyxxxxxpt_pinxxxxxx-注意两个分号不要漏掉然后发给机器人即可"><a class="markdownIt-Anchor" href="#2-浏览器登录网址mjdcom我的浏览器底部中间-向右划到第-2-页-工具箱-开发者工具-选择-cookies-拷贝-然后随便粘贴到一个地方找pt_pin和pt_key按照一下格式拼接-pt_keyxxxxxpt_pinxxxxxx-注意两个分号不要漏掉然后发给机器人即可"></a> 2、浏览器登录网址：<a href="http://m.jd.com/">m.jd.com</a>?我的?浏览器底部中间 向右划到第 2 页 工具箱 — 开发者工具 — 选择 Cookies 拷贝 ,然后随便粘贴到一个地方，找&quot;pt_pin&quot;和&quot;pt_key&quot;,按照一下格式拼接: <strong>pt_key=XXXXX;pt_pin=XXXXXX;</strong> 注意两个分号,不要漏掉,然后发给机器人即可!</h3>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="京东" scheme="https://ymlclub.cn/tags/%E4%BA%AC%E4%B8%9C/"/>
    
    <category term="cookie" scheme="https://ymlclub.cn/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个Java Scripts脚本</title>
    <link href="https://ymlclub.cn/2021123119294/"/>
    <id>https://ymlclub.cn/2021123119294/</id>
    <published>2021-12-31T14:20:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><blockquote><p>随着自己认识的不断深入,越来越想写一个属于自己的脚本了,说干就干</p></blockquote><ul><li>首先,你要学习一下脚本的语言</li><li>然后要能看懂脚本</li><li>然后就是根据大佬的脚本进行修改,或者套模板</li><li>再然后就可以完全自己写了</li><li>我是一个小白,没啥特长,就喜欢折腾</li></ul><div class="tip "><p>决定在2020年的最后一天,发布我写的第一个脚本</p></div><h2 id="脚本发布"><a class="markdownIt-Anchor" href="#脚本发布"></a> 脚本发布</h2><div class="tip success"><p>走财运app</p></div><div class="note info flat"><p>信息: 走财运app<br />地址: <a href="https://github.com/yml2213/javascript">github</a><br />日期: 12-31 初次发布<br />类型: ios<br />收益: 1000能量等于0.1元 每天不到1元<br />平台: 目前仅测试青龙使用 其他未测试<br />备注: 本人小白,写脚本纯属爱好,瞎折腾;水平低,写的不好看;但是脚本开源,希望大佬不要嘲笑我(滑稽);同时也希望有人一起交流,一起进步.</p></div><div class="mermaid">关于脚本呢,我想说一下几点</div><ol><li>首先,这可以算是我的第一个脚本,非常感谢在我编写过程中给与我帮助的人,同时也非常感谢大佬可以放出的js脚本,让我学习,借鉴(就是抄)</li><li>然后就是感谢帮我测试的人员,谢谢你们的付出</li><li>然后就是关于脚本的问题了:<ol><li><p>脚本变量多,主要是因为他请求都是post请求,然后每条请求都会有一个加密,你可以在我的注释里看到的,就是sign=后面的,一个32位的数字字母组合,每条请求不同,当然;不同人的相同请求也不同,所以只能通过最笨的办法解决----穷举,把所有的都写出来,需要的自己抓包,填写变量即可</p></li><li><p>然后就是怎么修改自己的脚本,因为每个人抓包不同,所以每个人的脚本运行也是有区别的</p></li></ol></li><li>下面说一下如何快速修改脚本<br />根据脚本注释,你可以迅速了解这个脚本是如何运作的</li></ol><div class="tip "><p>请根据自身需求选择观看</p></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">只跑两个视频</button></li><li class="tab"><button type="button" data-href="#-2">跑视频,能量</button></li><li class="tab"><button type="button" data-href="#-3">跑视频,能量,步数</button></li><li class="tab"><button type="button" data-href="#-4">其他请自行注释,抓包等</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><ol><li><p>环境变量:</p></li><li><p>脚本修改: 只保留红框里的即可,请注释其他模块</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><ol><li><p>环境变量:</p></li><li><p>脚本修改: 只保留红框里的即可,请注释其他模块</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><ol><li><p>环境变量:</p></li><li><p>脚本修改: 根据自己抓包情况进行注释操作</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tip bell"><p>下面是青龙环境的截图,可以借鉴下</p></div><ul><li><img src="https://tucang.cc/api/image/show/0f057c9c25d84fd27dab9f28e99a118b" alt="img" /></li></ul><h2 id="完结撒花"><a class="markdownIt-Anchor" href="#完结撒花"></a> 完结撒花 ❀</h2><ul><li>遇到任何问题,请留言或加群交流: QQ群:1001401060</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="Java Scripts" scheme="https://ymlclub.cn/tags/Java-Scripts/"/>
    
    <category term="脚本" scheme="https://ymlclub.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="学习" scheme="https://ymlclub.cn/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>记一次auto.js脚本编写</title>
    <link href="https://ymlclub.cn/2021122635704/"/>
    <id>https://ymlclub.cn/2021122635704/</id>
    <published>2021-12-26T11:15:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><h3 id="脚本"><a class="markdownIt-Anchor" href="#脚本"></a> 脚本</h3><ul><li>原计划是直接写圈 x 青龙脚本的 ,奈何自己水平实在是有限,写出来经常报错,只能暂时搁置了</li><li>然后突然间看到 auto.js 这个软件 同样使用 JavaScript 进行编写,但是有着很详细的中文文档,感觉对新手也很友好, 所以直接从 简单的 auto.js 脚本开始</li><li>然后就是看文档 看教学视频 一通研究,发现确实不是很难</li><li>于是就参照(抄)大佬的脚本,自己改了下,就能跑起来了呢,虽然是参照大佬的脚本,但是自己写的能跑起来,还是非常开心的</li><li>那就先简单介绍下今天的脚本吧</li></ul><h2 id="脚本介绍"><a class="markdownIt-Anchor" href="#脚本介绍"></a> 脚本介绍</h2><h3 id="运行环境"><a class="markdownIt-Anchor" href="#运行环境"></a> 运行环境</h3><ul><li>首先,运行环境只能是安卓设备 (毕竟太菜了 ios 的还不会)</li><li>其次, 你需要打开你的 <code>无障碍</code>服务和<code>悬浮窗</code>权限.这样才能运行脚本(<code>悬浮窗</code>权限不给也可以运行,但是看不到日志)</li><li>你手机本身不需要<code>root</code> 很多同学看到就高兴了</li><li>别的想不到了</li></ul><h3 id="脚本使用"><a class="markdownIt-Anchor" href="#脚本使用"></a> 脚本使用</h3><h4 id="关于脚本"><a class="markdownIt-Anchor" href="#关于脚本"></a> 关于脚本</h4><ul><li>首先,项目开源: <a href="https://github.com/yml2213/auto.js-yml">github</a></li><li>其次,打包 apk 未加密 随便一个人解包后即可看到源码</li><li>本人对于此项目不负任何责任,您下载使用应于 24 小时后删除</li><li>您安装即同意以上条款</li></ul><h4 id="脚本使用-2"><a class="markdownIt-Anchor" href="#脚本使用-2"></a> 脚本使用</h4><ul><li>下载<a href="https://github.com/yml2213/auto.js-yml/tree/master/ksjsb">项目内</a>的 apk,安装即可</li><li>安装后打开,请授予 <code>无障碍</code>服务和<code>悬浮窗</code>权限 以便脚本(apk)正常工作(如果软件内悬浮窗开启报错,请自行前往设置-开启本软件的<code>悬浮窗</code>权限)</li><li>然后可以设置每个视频观看时长与观看视频个数<img src="https://tucang.cc/api/image/show/3ea108fc5225b3a88ea0a4be15cb8c39" alt="image-20211226110255718" /></li><li>应用双开的请卸载一个(现在无法正确定位到双开应用)</li><li>然后是应用运行截图<img src="https://tucang.cc/api/image/show/c4c14965a6541239555e1a32c1399c8a" alt="image-20211226110330960" /></li><li>别的就没了吧,很简单的操作</li></ul><h4 id="脚本特点"><a class="markdownIt-Anchor" href="#脚本特点"></a> 脚本特点</h4><ul><li>脚本会取随机值,在视频停留 8-12 秒) (没测试行不行)</li><li>脚本会 <code>随机往回滑动</code>,模拟人的操作</li><li>脚本会<code>向下滑动两个 在向回滑动之后执行</code></li></ul><h4 id="问与答"><a class="markdownIt-Anchor" href="#问与答"></a> 问与答</h4><ul><li><p>问: 脚本会窃取我的隐私吗?</p><ul><li>答: 我小白不会写,会也不会去写这种垃圾行为</li></ul></li><li><p>问: 脚本可以替代大佬的<code>快手极速版</code>的脚本吗?</p><ul><li>答: 不能替代,本脚本只是简单的模拟看视频滑动,大佬的<code>快手极速版</code>脚本包含了很多东西;无法替代,只能算补充; 因为自己看视频的奖励会比脚本看高一点(自己测试的,错了别说我)</li></ul></li><li><p>问: 脚本会更新吗?我怎么更新?</p><ul><li>答: 看心情吧,不确定是否会更新; 关注更新的话 ,就请你关注我的 <a href="https://ymlclub.cn/">blog</a>;第一时间会发布于博客</li></ul></li></ul><h2 id="结束"><a class="markdownIt-Anchor" href="#结束"></a> 结束</h2><h3 id="终于写完了"><a class="markdownIt-Anchor" href="#终于写完了"></a> 终于写完了</h3><ul><li>大家有什么想说的,可以直接评论区评论</li><li>或者去我的 <a href="https://ymlclub.cn/">blog</a>留言</li><li>或者加群等等</li></ul><h3 id="祝大家玩的愉快"><a class="markdownIt-Anchor" href="#祝大家玩的愉快"></a> 祝大家玩的愉快</h3>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="脚本" scheme="https://ymlclub.cn/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="auto.js" scheme="https://ymlclub.cn/tags/auto-js/"/>
    
    <category term="apk" scheme="https://ymlclub.cn/tags/apk/"/>
    
  </entry>
  
  <entry>
    <title>巧用docker里的ubuntu，跑傻妞、oicq (onebot:再见👋🏻)</title>
    <link href="https://ymlclub.cn/2021121119419/"/>
    <id>https://ymlclub.cn/2021121119419/</id>
    <published>2021-12-11T09:15:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><h3 id="群辉垃圾别的很是很香的"><a class="markdownIt-Anchor" href="#群辉垃圾别的很是很香的"></a> 群辉”垃圾“（别的很是很香的）</h3><ul><li>没错，群辉的 gui 操作确实很强，超级强；但是他的包管理，他的命令限制太多了；根本没有一个好用的包管理软件，而你可能会说可以安装 ipkg 鸭；但是你知道吗，ipkg 也是个年久失修的玩意了。</li><li>是否受够了每次修改傻妞等都要远程 ssh 链接到群辉里，然后从普通用户切换到 root 提权，然后一通 cd，最后还要用 vim 来修改你想改的文件</li><li>是否受够了群辉”垃圾“的设定。系统分区就给 2.3G，动不动就爆满，满了以后还不敢乱搞。毕竟可能一搞坏了就是半条命</li><li>是否受够了群辉是不是抽风的 wget·········</li></ul><h3 id="新出路"><a class="markdownIt-Anchor" href="#新出路"></a> 新出路</h3><ul><li>昨天在帮一个朋友远程的时候，他的群辉 wget 死活不行了，群辉官方说重置系统，但是他舍不得，我就帮他用 docker 里的 ubuntu 用 wget 下载了一键安装板最新的傻妞，然后转移到了他安装的地方，受此启发，想到了用 ubuntu 接管整个傻妞跟 onebot</li><li>在群辉的 docker 里部署一个 ubuntu，然后整个傻妞跟傻妞需要的 node-onebot 等全放 ubuntu 中，这样不但好管理，而且好备份等</li><li>大体思路就是这样了，其实听到这里，已经有很多人可以自己操作去了，我为了方便跟我一样的小白，还是啰嗦啰嗦，写一遍教程吧，可能有没提到的地方，也请大佬们指教了</li></ul><h2 id="优缺点"><a class="markdownIt-Anchor" href="#优缺点"></a> 优缺点</h2><h3 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h3><ul><li>上面已经说了很多了，方便管理、部署、备份等</li><li>不在依赖群辉的系统空间，也省去了 ssh 链接群辉的必要，减少了误操作引起群辉问题的几率</li><li>docker 的 ubuntu 是超级轻量的，一个完整的最新包仅仅 27m，解压后仅仅 73m<img src="https://tucang.cc/api/image/show/32c0196bdb6343b09f0c3c6d5a52a993" alt="image-20211211190502028" /><img src="https://tucang.cc/api/image/show/ef6eed1fcac7f905bf4ef4dae68a7ff2" alt="image-20211211190533044" /></li><li>这就是 docker 的优点了，超级轻量（同时也意味着很多东西需要自己安装；不要怕，我们有 apt）</li><li>部署后超级轻量，占用很低<img src="https://tucang.cc/api/image/show/6d7cabbbd8257961967fc7cdef958520" alt="image-20211211190741649" /></li><li>还有就是可以吧你需要的文件夹挂载出来，这样就可以在群辉的<code>File Station</code>里面进行界面的操作了，更改傻妞配置什么的也不需要 ssh 使用命令修改了</li><li>暂时就这么多吧······</li></ul><h3 id="缺点"><a class="markdownIt-Anchor" href="#缺点"></a> 缺点</h3><ul><li>可能有人觉得这是套娃 🪆，但是我觉得这样做是有意义的（绝不是水文章）</li><li>别的就是可能第一次安装稍微有些麻烦了吧，因为你要安装你要的环境等</li><li>暂时想不到了······</li></ul><h3 id="说干就干开搞"><a class="markdownIt-Anchor" href="#说干就干开搞"></a> 说干就干，开搞</h3><h3 id="首先你需要搞个-ubuntu"><a class="markdownIt-Anchor" href="#首先你需要搞个-ubuntu"></a> 首先，你需要搞个 ubuntu</h3><ul><li><p>这个直接群辉 docker——注册表——搜索<code>ubuntu</code>——直接拉最新版即可（或者你喜欢那个拉那个）<img src="https://tucang.cc/api/image/show/d4199fa7547239871b1d8aa87e1cdbeb" alt="image-20211211191547909" /></p></li><li><p>安装时选择高级设置</p><ul><li><p>勾选下自动启动，这样群辉重启后会自动运行这个，虽然还要手动运行傻妞<img src="https://tucang.cc/api/image/show/45bf1c3e741bf01030810b70f5c6c171" alt="image-20211211191652126" /></p></li><li><p>按照你的需要自行映射下文件夹（不能把整个 etc 目录映射，又出现奇怪的 bug），这里在啰嗦下，有的还是不太明白傻妞会占用两个目录</p><blockquote><ol><li>使用一键安装板的傻妞的时候，除了在你执行的目录创建一个 sillyGirl 目录外，还会在<code>/etc/sliiyGirl</code>生成一个配置文件夹</li><li>例如：<ol><li>我在<code>/home</code>目录下执行了傻妞一键安装的命令</li><li>这样 在我的<code>/home/sillyGirl</code>下会生成傻妞的文件目录如下<img src="https://tucang.cc/api/image/show/aea7976b7f7dc46c775271fb59438949" alt="image-20211211192356093" /></li><li>与此同时，在<code>etc/sillyGirl</code>目录下也会生成傻妞的文件夹。目录如下<img src="https://tucang.cc/api/image/show/977e6ff47c871a472af267a4bcb5b0c0" alt="image-20211211192543456" /></li><li>这就是你删除了安装目录的傻妞，配置还没丢失的原因；也就是我做这个映射的原因</li><li>我的傻妞、<s>onebot</s> oicq 都会在<code>home</code>目录执行,然后<code>/etc/sillyGirl</code>映射可以 gui 修改傻妞配置,root 映射方便修改 oicq 配置文件</li></ol></li></ol></blockquote><ul><li><img src="https://tucang.cc/api/image/show/1f5c142fe5853198240894875a113295" alt="image-20211211191734629" /></li></ul></li><li><p>端口设置: 选择你想用的傻妞端口即可(同时不能与已有端口重复)<img src="https://tucang.cc/api/image/show/b848e7bcddd3aa6daa720a4a1d95344a" alt="image-20211211192904163" /></p></li></ul></li><li><p>这样就安装完了,是不是超级简单</p></li></ul><h3 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h3><h4 id="首先我们再来顺一下需要什么东西"><a class="markdownIt-Anchor" href="#首先我们再来顺一下需要什么东西"></a> 首先,我们再来顺一下需要什么东西</h4><ul><li>安装傻妞-----需要 wget</li><li><s>拉取 onebot 我们需要 git</s>(使用 oicq,暂时不需要了)</li><li><s>使用 node-onebot-----需要 node npm</s></li><li>使用 oicq-----需要 node npm</li><li>修改文件----需要 nano(vim)等<strong>编辑器</strong></li><li>最后就是 pm2----用来守护我们的 oicq sillyGirl 等程序</li></ul><h4 id="那就开始吧"><a class="markdownIt-Anchor" href="#那就开始吧"></a> 那就开始吧</h4><ul><li>那就先安装 wget<ul><li>首先,执行<code>apt update</code> 更新下软件包列表</li><li>在执行<code>apt -y install wget</code>这样就可以安装好了 wget ✅</li></ul></li><li>然后是 git<ul><li>执行<code>apt -y install git</code>这样就可以安装好了 git ✅</li></ul></li><li>然后是 node(放弃 nvm 方法,使用 n 安装管理 node)<ul><li>首先<code>apt -y install npm</code> 安装一个基础版本的 npm(时间有点长,耐心等待)</li><li>然后我们使用 npm 安装<code>n</code>管理 node</li><li>使用<code>npm install -g n</code>安装<code>n</code></li><li>然后检查<code>n</code>是否安装 <code>n --version</code><img src="https://tucang.cc/api/image/show/6e5428a895ab21a25ff4c66d52966438" alt="image-20211215223938327" /></li><li>成功后就可以方便的安装 node 了</li><li>使用<code>n lts</code> 即可安装 Node.js lts (长期服务)版本—v16.13.1 版本(可能版本号不对,因为写的时候这个就是最新的)</li><li>node 是包含 npm 的,此时你可以使用<code>npm -v</code>测试是否成功(npm -v 报错的重启 ubuntu 即可解决)</li><li>这样你的 node 也安装好了 ✅</li></ul></li><li>顺便安装几个编辑器吧<ul><li>这个直接使用 apt 即可</li><li>安装 nano <code>apt -y install nano</code></li><li>安装 vim <code>apt -y install vim</code></li><li>安装过程遇到选地区的请自行选择(没记错的话 6 亚洲 70 上海)</li><li>这样你的 nano vim 也安装好了 ✅</li></ul></li><li>最后就是安装 pm2 了<ul><li>是不是想直接<code>apt -y install pm2</code>了 年轻了;我们需要使用 npm 安装<ul><li>请执行 **<code>npm install -g pm2</code>**即可安装</li><li>执行**<code>pm2 -v</code>**即可检查是否安装成功</li></ul></li></ul></li><li>这样环境就安装的差不多了(不够的自己安装.命令百度一把一把的)</li></ul><h4 id="这样我们先来配置傻妞"><a class="markdownIt-Anchor" href="#这样我们先来配置傻妞"></a> 这样我们先来配置傻妞</h4><ul><li><p>首先 cd 到你想安装的文件夹 我安装在<code>home</code>目录下 执行 <code>cd /home</code><img src="https://tucang.cc/api/image/show/2507a2b0642f4017a84f2fb5f3594e6d" alt="image-20211211201504317" /></p></li><li><p><s>然后国内用户执行 <code>set sillyGirl download_prefix https://ghproxy.com/</code>(使用 git 代理加速下载)</s>()(已经不需要了)</p></li><li><p>在执行下面的命令,即可一键安装傻妞到/home 目录下(同时<code>/etc/sillyGirl</code>文件夹下也会生成配置文件)(如果命令不能用请自行获取最新:<a href="https://t.me/trialerr">tg</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=sillyGirl;a=arm64;<span class="keyword">if</span> [[ $(uname -a | grep <span class="string">&quot;x86_64&quot;</span>) != <span class="string">&quot;&quot;</span> ]];<span class="keyword">then</span> a=amd64;<span class="keyword">fi</span> ;<span class="keyword">if</span> [ ! -d <span class="variable">$s</span> ];<span class="keyword">then</span> mkdir <span class="variable">$s</span>;<span class="keyword">fi</span> ;<span class="built_in">cd</span> <span class="variable">$s</span>;wget http://github.yanyuge.workers.dev/https://github.com/cdle/<span class="variable">$&#123;s&#125;</span>/releases/download/main/<span class="variable">$&#123;s&#125;</span>_linux_<span class="variable">$a</span> -O <span class="variable">$s</span> &amp;&amp; chmod 777 <span class="variable">$s</span>;pkill -9 <span class="variable">$s</span>;$(<span class="built_in">pwd</span>)/<span class="variable">$s</span></span><br></pre></td></tr></table></figure></li><li><p>下面如果你想全新安装傻妞,可以跳过配置文件拷贝部分;你想使用原来的配置文件 请继续往下看</p></li><li><p>############配置文件拷贝部分开始#################</p></li><li><p>首先删除所有生成的配置文件 <code>rm -rf /etc/sillyGirl</code> 这样你这个文件夹以及文件夹内的所有文件都会被删除</p></li><li><p>然后 ssh 链接到你的群辉 执行这个命令</p><ul><li><p><code>cp -r /etc/sillyGirl /volume1/docker/ubunu/etc/sillyGirl</code></p><blockquote><p>命令解释 cp -r A B</p><ul><li>A B 为两个地址</li><li>A B 之间有空格</li><li>A 是需要复制的文件地址</li><li>B 是要复制到哪里去</li><li>请根据自己的<strong>实际位置</strong>修改命令</li><li>具体请看 <a href="https://www.runoob.com/linux/linux-comm-cp.html">菜鸟教程</a></li></ul></blockquote></li></ul></li><li><p>############配置文件拷贝部分结束#################</p></li><li><p>这样你就已经把傻妞完整的迁移到了 docker 里的 ubuntu</p></li><li><p>执行<code>cd /home/sillyGirl</code> cd 到傻妞文件夹(根据自己目录更更改.跟我一样无需更改)</p></li><li><p>然后执行<code>./sillyGirl</code>即可运行傻妞.与你群辉的没有差异</p></li><li><p>还请你记得这里的傻妞 http 服务端口,后面的 onebot 需要使用(端口号要统一)<img src="https://tucang.cc/api/image/show/1e6a99c3f39464e414d17a2e7ca8c043" alt="port" /></p></li><li><p>傻妞完结撒花</p></li></ul><h4 id="然后我们配置node-onebot-oicq"><a class="markdownIt-Anchor" href="#然后我们配置node-onebot-oicq"></a> 然后我们配置<s>node-onebot</s> oicq</h4><ul><li><p><s><code>cd /home</code> cd 到你要安装的目录</s></p></li><li><p><s>打开后克隆这个仓库</s></p><p><s><code>git clone https://ghproxy.com/https://github.com/takayama-lily/node-onebot.git</code></s></p><p><s>然后就会有很多文件会出现在 node-onebot 这个文件夹 📂 里</s></p></li><li><p><s>然后重点来了</s></p><ul><li><p><s><code>cdnode-onebot</code> cd 到这个目录下</s></p></li><li><p><s>新建一个 config.js 文件（后面命令找不到会自动新建，所以跳过）</s></p></li><li><p><s><code>nano config.js</code>使用 nano 编辑器打开（没有会新建）config.js 文件</s></p></li><li><p><s>然后保存空文件-----按 ctrl+o 然后回车确认修改的内容；然后 ctrl+x 推出编辑器</s></p></li><li><p><s>直接使用群辉的文本编辑器打开 config.js 进行编辑(ununtu 的中文可能乱码,百度一堆解决办法;我就不放链接了,直接使用群辉的编辑器)</s></p></li><li><p><s>粘贴上模板配置文件，下面引用大佬的模板及说明</s></p></li><li><pre class="highlight"><code class="js"><span class="hljs-built_in">module</span>.exports = &#123;  <span class="hljs-comment">//通用配置</span>  <span class="hljs-attr">general</span>: &#123;    <span class="hljs-attr">platform</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//1:安卓手机 2:aPad 3:安卓手表 4:MacOS 5:iPad</span>    <span class="hljs-attr">debug</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//开启debug</span>    <span class="hljs-attr">use_cqhttp_notice</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//是否使用cqhttp标准的notice事件格式</span>    <span class="hljs-attr">host</span>: <span class="hljs-string">"localhost"</span>, <span class="hljs-comment">//监听主机名</span>    <span class="hljs-attr">port</span>: <span class="hljs-number">5700</span>, <span class="hljs-comment">//端口</span>    <span class="hljs-attr">use_http</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//启用http</span>    <span class="hljs-attr">use_ws</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//启用正向ws，和http使用相同地址和端口</span>    <span class="hljs-attr">access_token</span>: <span class="hljs-string">""</span>, <span class="hljs-comment">//访问api的token</span>    <span class="hljs-attr">secret</span>: <span class="hljs-string">""</span>, <span class="hljs-comment">//上报数据的sha1签名密钥</span>    <span class="hljs-attr">post_timeout</span>: <span class="hljs-number">30</span>, <span class="hljs-comment">//post超时时间(秒)</span>    <span class="hljs-attr">post_message_format</span>: <span class="hljs-string">"array"</span>, <span class="hljs-comment">//"string"或"array"</span>    <span class="hljs-attr">enable_cors</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//是否允许跨域请求</span>    <span class="hljs-attr">enable_heartbeat</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">//是否启用ws心跳</span>    <span class="hljs-attr">heartbeat_interval</span>: <span class="hljs-number">15000</span>, <span class="hljs-comment">//ws心跳间隔(毫秒)</span>    <span class="hljs-attr">rate_limit_interval</span>: <span class="hljs-number">500</span>, <span class="hljs-comment">//使用_rate_limited后缀限速调用api的排队间隔时间(毫秒)</span>    <span class="hljs-attr">event_filter</span>: <span class="hljs-string">""</span>, <span class="hljs-comment">//json格式的事件过滤器文件路径</span>    <span class="hljs-attr">post_url</span>: [      <span class="hljs-comment">//上报地址，可以添加多个url</span>      <span class="hljs-comment">// "http://your.address.com:80",</span>    ],    <span class="hljs-attr">ws_reverse_url</span>: [      <span class="hljs-comment">//反向ws地址，可以添加多个url</span>      <span class="hljs-string">"ws://localhost:8080/qq/receive"</span>,    ],    <span class="hljs-attr">ws_reverse_reconnect_interval</span>: <span class="hljs-number">3000</span>, <span class="hljs-comment">//反向ws断线重连间隔(毫秒)，设为负数直接不重连</span>    <span class="hljs-attr">ws_reverse_reconnect_on_code_1000</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//反向ws是否在关闭状态码为1000的时候重连</span>  &#125;,  <span class="hljs-comment">//每个账号的单独配置(用于覆盖通用配置)</span>  <span class="hljs-number">147258369</span>: &#123;&#125;,&#125;;</code></pre></li><li><p><s>我的配置如下(仅供参考)</s>!</p></li><li><p><s>第一个：模式 使用 1-安卓 会把自己的 qq 挤下线；使用 2-ipad 正常 其他未测试</s></p></li><li><p><s>第二个：地址 这里填你傻妞的地址（分几种请情况）</s></p><ul><li><s>（1）同一台设备 默认 127.0.0.1（localhost）即可，自己改端口 （不对请指教）</s></li><li><s>（2）在同一局域网中 跟我格式一样即可 填局域网 ip+端口 后面默认</s></li><li><s>（3）在不同的网络下，请直接填写相应的 ip+端口</s></li></ul></li></ul></li><li><p><s>设置完以后 自己保存;这样 onebot 也部署完成了</s></p></li><li><p><strong>oicq 配置</strong> onebot 的可以借鉴(基本没用了)</p></li><li><p>安装 oicq 执行<code>npm i -g oicq@1</code> 即可完成安装</p></li><li><p>安装完成 oicq 后，先执行<code>oicq XXXXX</code> 命令，系统会生成默认配置文件</p></li><li><p>配置文件一般在<code>/root/.oicq</code>文件夹 📂 内 ,名字是<code>config.js</code></p></li><li><p>我们通过<code>vim</code> <code>nano</code>等编辑器编辑这个<code>config.js</code>文件(也可以去前面映射的群辉文件夹自己更改)</p></li><li><p>我的文件(参考下)<img src="https://tucang.cc/api/image/show/afbb341abd4826879f039925998faef0" alt="image-20211215231745783" /></p></li></ul><h4 id="傻妞与onrbot-oicq-联动"><a class="markdownIt-Anchor" href="#傻妞与onrbot-oicq-联动"></a> 傻妞与<s>onrbot</s> oicq 联动</h4><ul><li>现在需要配置的基本完成了，到了关键的时候了<ul><li>首先-----<code>cd /home/sillyGirl</code> cd 到傻妞的路径下</li><li>手动运行傻妞 <code>./sillyGirl</code></li><li>然后可以看到傻妞开放 http 服务的通知，记得跟你上面 config.js 的端口对应上;不对应的去你映射的<code>/etc/sillyGirl</code>修改傻妞的 sets.conf 配置文件(没有的话新建:并按照<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/19778.html">小姐姐教程填写</a>)</li><li>重新启动,直到你的端口对应起来 傻妞的端口----你 ununtu 开放的端口-----onebot 的端口(我的图片之前的.别太较真)<img src="https://tucang.cc/api/image/show/1e6a99c3f39464e414d17a2e7ca8c043" alt="image-20211208213541658" /></li><li>然后执行 <code>oicq XXXXXXX</code> (XXXXX 是你的 qq 号,记得跟<code>config.js</code>里的对应)</li><li>然后就会跑代码，然后就是扫码登录（出现连接不上服务就多试几次就可以了）</li><li>然后看到反向 ws 代理连接成功就证明联动成功了</li><li>然后，然后，然后 没有然后了；快去查询试试吧</li></ul></li></ul><h4 id="使用-pm2-守护我们的onebot-oicq"><a class="markdownIt-Anchor" href="#使用-pm2-守护我们的onebot-oicq"></a> 使用 pm2 守护我们的<s>onebot</s> oicq</h4><ul><li>好不容易安装好的,不能让他轻易死掉呀</li><li>首先 <code>ctrl + c</code>关闭<s>onebot</s> oicq</li><li>执行 <code>pm2 start &quot;oicq QQ号&quot;</code>即可<img src="https://tucang.cc/api/image/show/2db433352202fd29a8a18e917e740433" alt="image-20211215232202882" /></li><li><strong>如果有多个机器人,请手动运行下 <code>oicq QQ号</code>后,确认没问题后, 在使用 pm2 守护</strong></li></ul><h4 id="使用-pm2-守护我们的傻妞"><a class="markdownIt-Anchor" href="#使用-pm2-守护我们的傻妞"></a> 使用 pm2 守护我们的傻妞</h4><ul><li>不能只守护 onebot,傻妞也需要我们守护下呀<ul><li>cd 到傻妞的目录,然后<code>pm2 start &quot;./sillyGirl&quot;</code><img src="https://tucang.cc/api/image/show/cbaee9c3dd1954ac0a41276bfb45e54b" alt="image-20211215232702332" /></li><li>确认下是否成功 <code>pm2 list</code>,看到傻妞的进程就是成功了<img src="https://tucang.cc/api/image/show/bdd14b129a6c52d8e993f5488271b47b" alt="image-20211215232724453" /></li></ul></li></ul><h4 id="然后就是开启-pm2-开机启动与保存守护列表"><a class="markdownIt-Anchor" href="#然后就是开启-pm2-开机启动与保存守护列表"></a> 然后就是开启 pm2 开机启动与保存守护列表</h4><ul><li>执行<code>pm2 startup</code> 可以创建 pm2 的开机自启动</li><li>执行<code>pm2 save</code> 保存当前应用列表</li><li>执行<code>pm2 resurrect</code> 重新加载保存的应用列表</li><li>其他常用 pm2 命令<ul><li><code>pm2 list</code> 列表 PM2 启动的所有的应用程序</li><li><code>pm2 monit</code> 显示每个应用程序的 CPU 和内存占用情况</li><li><code>pm2 logs</code> 显示所有应用程序的日志</li><li><code>pm2 logs [app-name]</code> 显示指定应用程序的日志</li><li><code>pm2 stop all</code> 停止所有的应用程序</li><li><code>pm2 stop 0</code> 停止 id 为 0 的指定应用程序</li><li><code>pm2 restart all</code> 重启所有应用</li><li><code>pm2 delete all</code> 关闭并删除所有应用</li><li><code>pm2 delete 0</code> 删除指定应用 id</li></ul></li></ul><h4 id="完结撒花"><a class="markdownIt-Anchor" href="#完结撒花"></a> 完结撒花</h4><ul><li>撒花 撒花 撒花</li><li>终于完了呀,码字好累</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="傻妞" scheme="https://ymlclub.cn/tags/%E5%82%BB%E5%A6%9E/"/>
    
    <category term="docker" scheme="https://ymlclub.cn/tags/docker/"/>
    
    <category term="ubuntu" scheme="https://ymlclub.cn/tags/ubuntu/"/>
    
    <category term="oicq" scheme="https://ymlclub.cn/tags/oicq/"/>
    
  </entry>
  
  <entry>
    <title>Cron解析拓展</title>
    <link href="https://ymlclub.cn/2021120142806/"/>
    <id>https://ymlclub.cn/2021120142806/</id>
    <published>2021-12-01T18:08:54.000Z</published>
    <updated>2022-06-30T02:49:17.871Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><h3 id="由于最近研究羊毛需要使用各种-cron-定时"><a class="markdownIt-Anchor" href="#由于最近研究羊毛需要使用各种-cron-定时"></a> 由于最近研究羊毛，需要使用各种 Cron 定时</h3><ul><li>但是 Cron 简单的可以一看就懂了，复杂的还要找一个在线解析网站，很麻烦</li><li>由于嫌弃开新页面麻烦，所以想找一个 Cron 的插件</li><li>巧合的是并没有单纯地 Cron 插件，毕竟太小众了</li></ul><h3 id="没有现成的那就自己搞一个"><a class="markdownIt-Anchor" href="#没有现成的那就自己搞一个"></a> 没有现成的，那就自己搞一个</h3><ul><li>当我萌生这个想法的时候，我就已经走上了一条不归路</li><li>当时觉得 Cron 解析很简单，然后在找个 Chrome，随便套个壳，完美</li><li>可惜天公不作美，自己 github 上找了一遍又一遍，项目下载测试了一个又一个，始终没找到合适的</li><li>自己写：算了算了，我不会写代码，不够头疼的呢</li></ul><h3 id="不过功夫不负有心人终于找到了一个"><a class="markdownIt-Anchor" href="#不过功夫不负有心人终于找到了一个"></a> 不过功夫不负有心人，终于找到了一个</h3><ul><li>大佬项目地址:<a href="https://github.com/baiy/Ctool">github</a></li><li>终于在这个大佬的项目里，找到了我需要的东西</li><li>然后就是魔改下大佬的项目，吧不需要的全部删除</li><li>本人不会代码，只能各种乱改，然后各种测试，最终终于到了能看的地步，这里分享下，给有需要的人</li><li>我魔改的后的项目地址：<a href="https://github.com/yml2213/cron">yml2213/cron</a></li><li>希望有大佬带带我，我只是个小白（爱折腾的小白）</li></ul><h2 id="开始教程"><a class="markdownIt-Anchor" href="#开始教程"></a> 开始教程</h2><h3 id="废话不说了下面开始"><a class="markdownIt-Anchor" href="#废话不说了下面开始"></a> 废话不说了，下面开始</h3><h2 id="1-克隆我的项目"><a class="markdownIt-Anchor" href="#1-克隆我的项目"></a> 1. 克隆我的项目</h2><ul><li><p>地址：<a href="https://github.com/yml2213/cron">yml2213/cron</a></p></li><li><p>不管你用什么办法，克隆下来，然后放到一个你能找到，但是不能经常用的地方，这个文件夹在安装后不能删除，所以自己选个目录（我的目录：仅供参考）<img src="https://tucang.cc/api/image/show/8b61532aec61425a061318856b402cfe" alt="image-20211201164904270" /></p></li><li><p>然后打开你的浏览器，找到拓展程序<img src="https://tucang.cc/api/image/show/b649eead91056769f84a10d4f5b63fd3" alt="image-20211201182222538" /></p></li><li><p>然后打开开发者模式——再加载已解压的拓展程序<img src="https://tucang.cc/api/image/show/94edeaead4cf389fe76dbf25d139a874" alt="image-20211201182304509" /></p></li><li><p>然后选择你刚才的目录<img src="https://tucang.cc/api/image/show/68bb4c2559fe226a66b73aa1c35fba40" alt="image-20211201165326957" /></p></li><li><p>然后就已经安装成功了</p><p><img src="https://tucang.cc/api/image/show/5503cd3d35a1cbdb0d1851c613edd4f0" alt="image-20211201165356523" /></p></li><li><p>最后选择这个固定，就可以固定在 chrome 页面了</p><p><img src="https://tucang.cc/api/image/show/1f73bf5d5b7ffbbbf138892ccc7736cd" alt="image-20211201165523758" /></p></li><li><p>然后点击插件，点一次这个“Cron 定时解析”，就可以愉快的玩耍了</p></li><li><p>这样你的插件就安装完成了，以后遇到不懂得 Cron 就可以直接复制，然后点一下就直接解析了，妈妈再也不用担心我不知道 Cron 运行时间了</p></li><li><p>完结撒花 ✿✿ ヽ(°▽°)ノ ✿</p></li><li><p>祝您安装顺利</p></li></ul><h2 id="完成手工"><a class="markdownIt-Anchor" href="#完成手工"></a> 完成手工</h2><h3 id="下面放几张使用效果图"><a class="markdownIt-Anchor" href="#下面放几张使用效果图"></a> 下面放几张使用效果图</h3><ul><li>简单的<img src="https://tucang.cc/api/image/show/0b260dc7167d356e2853f307fac13ad8" alt="image-20211201182951241" /></li><li>复杂一点点的<img src="https://tucang.cc/api/image/show/3d36e1fb0379f72609d73ba2249ab347" alt="image-20211201183027309" /></li><li>最后祝你食用愉快</li><li>有会代码的大佬帮我优化下也可以，我只是个“爱折腾的小白”</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="拓展" scheme="https://ymlclub.cn/tags/%E6%8B%93%E5%B1%95/"/>
    
    <category term="Cron" scheme="https://ymlclub.cn/tags/Cron/"/>
    
    <category term="魔改" scheme="https://ymlclub.cn/tags/%E9%AD%94%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>vlw框架的配置、使用</title>
    <link href="https://ymlclub.cn/2021111119046/"/>
    <id>https://ymlclub.cn/2021111119046/</id>
    <published>2021-11-11T20:43:54.000Z</published>
    <updated>2022-06-30T02:49:17.871Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><h3 id="可爱猫真的是太挑系统了"><a class="markdownIt-Anchor" href="#可爱猫真的是太挑系统了"></a> 可爱猫真的是太挑系统了</h3><ul><li>我在腾讯云的 2012r2 可以正常运行，到了自己的 win7、win10、win2012r2 均不能正常联动微信，win10 没反应，win7 根 2012r2 闪退，我一度怀疑自己的时候，大佬支持新的微信框架了<img src="https://tucang.cc/api/image/show/9d2fc6d5d663352df9c7455d7c63f458" alt="image-20211111191118867" /></li><li>真的是太好了，太好了 我是不想折腾可爱猫了，当时腾讯云部署的时候也折麽我好久，好久</li><li>废话不多说了，开搞<a href="http://a.vlmai.cn/">vlw</a></li><li>另外家庭宽带也可以用奥 😍 我的腾讯云已经退款了（感谢 คิดถึง、以及群里用户的思路与实践）</li></ul><h2 id="正式开始"><a class="markdownIt-Anchor" href="#正式开始"></a> 正式开始</h2><h3 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h3><ul><li>win 平台的电脑一个（测试 win7 可行）✅</li><li>vlw(<a href="http://a.vlmai.cn/">http://a.vlmai.cn/</a>)框架。我下载的免费版本✅<img src="https://tucang.cc/api/image/show/7b0f81552beba784bacccb3eabe59773" alt="image-20211111192236689" /></li><li><a href="https://xyo.lanzoui.com/b0cknokbg">cn.sxyo.xYo_httpApi_WeChat.vlw.dl 插件</a> ✅<img src="https://tucang.cc/api/image/show/6b0a437579a9c06c9090d3051646e2ee" alt="image-20211111192613290" /></li><li>以及电脑上安装微信，好像没有微信会自动给你网页链接，让你下载 ✅</li></ul><h3 id="开始实际操作"><a class="markdownIt-Anchor" href="#开始实际操作"></a> 开始实际操作</h3><h3 id="关于-vlw-的配置"><a class="markdownIt-Anchor" href="#关于-vlw-的配置"></a> 关于 vlw 的配置</h3><ul><li>首先给他安个家，最好是英文、拼音目录（我没放中文目录，没测试是否可行）</li><li>把插件放到 plugin 目录下<img src="https://tucang.cc/api/image/show/3e66d43e28f8e5819a61e0845021a405" alt="image-20211111193323233" /></li><li>打开，登录微信，请忽略他的广告<img src="https://tucang.cc/api/image/show/e38613ca3e0b81bed5c8fbfaf9422bfa" alt="img" /></li><li>插件页面，点击安装即可安装我们放进去的插件，然后启用，打开设置<img src="https://tucang.cc/api/image/show/7bd01ca21758103b81e0851be886dd26" alt="image-20211111194658630" /></li><li>插件设置（6 是 http）<img src="https://tucang.cc/api/image/show/22fe7114f7734e099ca298cb0f14d663" alt="image-20211111195311130" /></li><li>如果有防火墙记得开放相关端口，具体可以看小姐姐<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/30437.html">教程</a>（或者<a href="https://www.baidu.com/">百度一下，你就知道 (baidu.com)</a>、<a href="https://www.google.com/">Google</a>e），记得百度 5 分钟，群里（吹）俩小时</li></ul><h3 id="然后就是傻妞的配置了"><a class="markdownIt-Anchor" href="#然后就是傻妞的配置了"></a> 然后就是傻妞的配置了</h3><ul><li><p>首先，确定你是一键安装版（最新）的傻妞</p></li><li><p>可以 通过 “ list wx ” 命令查看你关于微信的设置<img src="https://tucang.cc/api/image/show/a4f60eab2cca152b20910918b82a4cb0" alt="image-20211216135019090" /></p><ul><li><p>第一条：设置你的 vlw 地址 (set wx vlw_addr <a href="http://xn--eqrt2g">http://域名</a>:傻妞端口/wx/receive ##对应第一条)</p></li><li><p>第二条：设置你 vlw 软件的 token (软件里自定义的那个)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set wx vlw_addr http://域名:端口   ##你的vlw框架的域名+端口；服务器就ip+端口   #第一条</span><br><span class="line">set wx vlw_token 你的token        ##你设置的token 第二条</span><br></pre></td></tr></table></figure></li></ul></li><li><p>完成后重启傻妞，记得打开你的 vlw 框架服务</p></li><li><p>如果还不行的话，那就进入排错阶段（恭喜你，已经入坑了）</p></li></ul><h2 id="排错阶段"><a class="markdownIt-Anchor" href="#排错阶段"></a> 排错阶段</h2><h3 id="首先学习小姐姐的方法"><a class="markdownIt-Anchor" href="#首先学习小姐姐的方法"></a> 首先学习<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/30437.html">小姐姐的方法</a></h3><ul><li>首先访问你的傻妞远程地址，正常是 404（也就框架的消息回调地址）<img src="https://tucang.cc/api/image/show/6bfda41daa5b0e8f8acd9036e271412f" alt="image-20211111203130720" /></li><li>然后是你的 clw 框架地址，（由于没有截图）正常可能是这样的<img src="https://tucang.cc/api/image/show/e75ab9366497c916e37fb6423162fa43" alt="img" /></li><li>都能访问的话，那就给傻妞发送 list wx 查看设置；根我的垃圾图片对比下</li><li>还不通的话，那就手动启动傻妞，然后微信发送命令，看看终端输出什么<ul><li>如果收不到，说明问题很大——慢慢检查吧</li><li>如果收到了，但是是这样的，说明傻妞设置的 xlw 框架有错误（跟我一样的问题）<img src="https://tucang.cc/api/image/show/b01a4c7bd0672d435dfa06a206a52b8e" alt="9836DC0E038BAE617A6A37FBC464EB3B" /></li><li>如果·····（没见过别的了，欢迎补充）</li></ul></li></ul><h2 id="结尾"><a class="markdownIt-Anchor" href="#结尾"></a> 结尾</h2><h3 id="终于完成了教程又水了一篇"><a class="markdownIt-Anchor" href="#终于完成了教程又水了一篇"></a> 终于完成了教程（又水了一篇）</h3><ul><li>以上内容都是个人测试，如果哪里错了，请指出，有交流，才有收获</li><li>欢迎使用我搭建的<a href="https://img.menglei.xyz/">图床)</a></li><li>祝您一次成功</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="傻妞" scheme="https://ymlclub.cn/tags/%E5%82%BB%E5%A6%9E/"/>
    
    <category term="vlw机器人" scheme="https://ymlclub.cn/tags/vlw%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
    <category term="配置" scheme="https://ymlclub.cn/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>sillyGirl（一键脚本）配置、使用、以及对接Nolan、青龙、以及设置返利的一些坑</title>
    <link href="https://ymlclub.cn/2021110833372/"/>
    <id>https://ymlclub.cn/2021110833372/</id>
    <published>2021-11-08T19:15:54.000Z</published>
    <updated>2022-06-30T02:49:17.871Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="沉迷薅羊毛无法自拔的我"><a class="markdownIt-Anchor" href="#沉迷薅羊毛无法自拔的我"></a> 沉迷薅羊毛无法自拔的我</h2><h5 id="赌狗一无所有-赌狗一无所有-赌狗一无所有"><a class="markdownIt-Anchor" href="#赌狗一无所有-赌狗一无所有-赌狗一无所有"></a> 赌狗一无所有 ！ 赌狗一无所有 ！ 赌狗一无所有 ！</h5><h5 id="赌狗一无所有-赌狗一无所有-赌狗一无所有-2"><a class="markdownIt-Anchor" href="#赌狗一无所有-赌狗一无所有-赌狗一无所有-2"></a> 赌狗一无所有 ！！ 赌狗一无所有 ！！ 赌狗一无所有 ！！</h5><h5 id="赌狗一无所有-赌狗一无所有-赌狗一无所有-3"><a class="markdownIt-Anchor" href="#赌狗一无所有-赌狗一无所有-赌狗一无所有-3"></a> 赌狗一无所有！！ ！赌狗一无所有！！ ！赌狗一无所有！！ ！</h5><h3 id="最近上了小姐姐的当直接积分抽奖积分都抽没了-啥也没抽到让我哭一会"><a class="markdownIt-Anchor" href="#最近上了小姐姐的当直接积分抽奖积分都抽没了-啥也没抽到让我哭一会"></a> 最近上了小姐姐的当，直接积分抽奖，积分都抽没了 啥也没抽到（让我哭一会）</h3><h3 id="赶上了小姐姐跟猫咪大佬的末班车上了车只能折腾最新的傻妞"><a class="markdownIt-Anchor" href="#赶上了小姐姐跟猫咪大佬的末班车上了车只能折腾最新的傻妞"></a> 赶上了小姐姐跟猫咪大佬的末班车，上了车，只能折腾最新的傻妞</h3><ol><li><p>最新的傻妞大佬整了个<strong>一键脚本</strong>，傻妞的安装配置也方便了许多；</p><ol><li>开始踩坑，一定使用<strong>root</strong>身份登陆 - 群晖 <img src="https://tucang.cc/api/image/show/8bab93d734d117e7e4c7b4543d1f5724" alt="image-20211108163536303" /><ul><li>ubuntu <img src="https://tucang.cc/api/image/show/722a5d0b0c708db3306fc7b25442b087" alt="image-20211108163716108" /></li></ul></li></ol></li><li><p>然后按照大佬的最新教程：（可升级的一键安装版）</p><ul><li><p>国内用户升级先执行：set sillyGirl download_prefix <a href="https://ghproxy.com/">https://ghproxy.com/</a></p></li><li><p>一键安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=sillyGirl;a=arm64;if [[ $(uname -a | grep &quot;x86_64&quot;) != &quot;&quot; ]];then a=amd64;fi ;if [ ! -d $s ];then mkdir $s;fi ;cd $s;wget https://mirror.ghproxy.com/https://github.com/cdle/$&#123;s&#125;/releases/download/main/$&#123;s&#125;_linux_$a -O $s &amp;&amp; chmod 777 $s;pkill -9 $s;$(pwd)/$s</span><br></pre></td></tr></table></figure></li><li><p>迁移傻妞只需备份/etc/sillyGirl/sillyGirl.cache，删了等于重装<img src="https://tucang.cc/api/image/show/4d26d02ece04be4062c275a0aaba93dd" alt="image-20211108193744735" /></p></li></ul></li><li><p>然后会安装超级多的东西</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">root@yml-ubuntu:/home/yml# sudo -i</span><br><span class="line">root@yml-ubuntu:~# ls</span><br><span class="line">snap</span><br><span class="line">root@yml-ubuntu:~# pwd</span><br><span class="line">/root</span><br><span class="line">root@yml-ubuntu:~# set sillyGirl download_prefix https://ghproxy.com/</span><br><span class="line">root@yml-ubuntu:~# s=sillyGirl;a=arm64;if [[ $(uname -a | grep &quot;x86_64&quot;) != &quot;&quot; ]];then a=amd64;fi ;if [ ! -d $s ];then mkdir $s;fi ;cd $s;wget https://mirror.ghproxy.com/https://github.com/cdle/$&#123;s&#125;/releases/download/main/$&#123;s&#125;_linux_$a -O $s &amp;&amp; chmod 777 $s;pkill -9 $s;$(pwd)/$s</span><br><span class="line">--2021-11-08 15:52:28--  https://mirror.ghproxy.com/https://github.com/cdle/sillyGirl/releases/download/main/sillyGirl_linux_amd64</span><br><span class="line">正在解析主机 mirror.ghproxy.com (mirror.ghproxy.com)... 132.226.238.71</span><br><span class="line">正在连接 mirror.ghproxy.com (mirror.ghproxy.com)|132.226.238.71|:443... 已连接。</span><br><span class="line">已发出 HTTP 请求，正在等待回应... 200 OK</span><br><span class="line">长度： 32643467 (31M) [application/octet-stream]</span><br><span class="line">正在保存至: “sillyGirl”</span><br><span class="line"></span><br><span class="line">sillyGirl                          100%[================================================================&gt;]  31.13M  4.15MB/s    用时 9.4s</span><br><span class="line"></span><br><span class="line">2021-11-08 15:52:39 (3.32 MB/s) - 已保存 “sillyGirl” [32643467/32643467])</span><br><span class="line"></span><br><span class="line">[GIN-debug] [WARNING] Running in &quot;debug&quot; mode. Switch to &quot;release&quot; mode in production.</span><br><span class="line"></span><br><span class="line"> - using env:export GIN_MODE=release</span><br><span class="line"> - using code:gin.SetMode(gin.ReleaseMode)</span><br><span class="line"></span><br><span class="line">2021/11/08 15:52:39.608 [W]  青龙登录失败：&#123;&quot;code&quot;:500,&quot;message&quot;:&quot;celebrate request validation failed&quot;&#125;</span><br><span class="line"></span><br><span class="line">[GIN-debug] GET    /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] POST   /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] PUT    /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] PATCH  /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] HEAD   /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] OPTIONS /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] DELETE /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] CONNECT /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">[GIN-debug] TRACE  /wx/                      --&gt; github.com/cdle/sillyGirl/im/wxmp.init.0.func1 (1 handlers)</span><br><span class="line">2021/11/08 15:52:39.622 [W]  未提供telegram机器人token</span><br><span class="line"></span><br><span class="line">[GIN-debug] POST   /wx/receive               --&gt; github.com/cdle/sillyGirl/im/wx.init.0.func3 (1 handlers)</span><br><span class="line">[GIN-debug] GET    /relay                    --&gt; github.com/cdle/sillyGirl/im/wx.init.0.func4 (1 handlers)</span><br><span class="line">[GIN-debug] GET    /wximage                  --&gt; github.com/cdle/sillyGirl/im/wx.init.0.func5 (1 handlers)</span><br><span class="line">2021/11/08 15:52:39.637 [Q] 开始尝试登录并同步消息...</span><br><span class="line">2021/11/08 15:52:39.638 [Q] 使用协议: iPad</span><br><span class="line">2021/11/08 15:52:41.276 [Q] 请使用手机QQ扫描二维码 (qrcode.png) :</span><br></pre></td></tr></table></figure><ul><li><p>这样安装后：</p><ul><li>群晖目录及文件（经测试，删除 root 目录下的 sillyGirl 不是丢失傻妞配置，仅供参考，应该所有的参数都在备份文件里：/etc/sillyGirl/sillyGirl.cache） <img src="https://tucang.cc/api/image/show/a39e3f2ab1dc404e856839896257116f" alt="image-20211108192545957" /></li><li>ubuntu 目录及文件 <img src="https://tucang.cc/api/image/show/366021c4d31df0a695f1073d7d834c76" alt="image-20211108193139132" /></li></ul></li></ul></li><li><p>安装完成后，请使用 qq bot 账号扫码，会绑定扫码 qq 为 bot 机器人（下面叫 qqbot 为 a）</p></li><li><p>绑定后；qq bot（机器人 a），可以跟自己对话，使用这个模式设置命令，不知道命令的看<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/31910.html">小姐姐这一篇（傻妞命令大全）</a></p></li><li><p>我习惯先设定自己 qq 大号（b）为管理员；命令请查询上边；然后对接青龙、nolan 等</p></li></ol><h2 id="傻妞安装完了下面是对接环节"><a class="markdownIt-Anchor" href="#傻妞安装完了下面是对接环节"></a> 傻妞安装完了，下面是对接环节</h2><h3 id="对接青龙"><a class="markdownIt-Anchor" href="#对接青龙"></a> 对接青龙</h3><ul><li><p>请点击跳转<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/31910.html#i-2">sillyGirl 傻妞命令大全 - 科技玩家 (kejiwanjia.com)</a> （小姐姐加锚点了，跳过去默认就是，不用翻了。小姐姐 yyds）</p></li><li><p>懒人福利（是我没错了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 对接青龙</span><br><span class="line">set qinglong host http://xxxxxx:xx ##一定要加&quot;http://&quot;，我第一次没加，就翻车了。</span><br><span class="line">set qinglong client_id xxxxxx ##第一步创建青龙应用获取的，直接复制粘贴</span><br><span class="line">set qinglong client_secret xxxxx ##第一步创建青龙应用获取的，直接复制粘贴</span><br><span class="line"># 使用命令</span><br><span class="line">^ql\s+config$</span><br><span class="line">^ql\s+envs$</span><br><span class="line">^ql\s+env\s+get\s+(.+)$</span><br><span class="line">^ql\s+env\s+find\s+(.+)$</span><br><span class="line">^ql\s+env\s+set\s+(\S+)\s+(.+)$</span><br><span class="line">^ql\s+env\s+remark\s+(\S+)\s+(.+)$</span><br><span class="line">^ql\s+env\s+disable\s+(.+)$</span><br><span class="line">^ql\s+env\s+enable\s+(.+)$</span><br><span class="line">^ql\s+crons$</span><br><span class="line">^ql\s+cron\s+status\s+(.+)$</span><br><span class="line">^ql\s+cron\s+run\s+(.+)$</span><br><span class="line">^ql\s+cron\s+stop\s+(.+)$</span><br><span class="line">^ql\s+cron\s+enable\s+(.+)$</span><br><span class="line">^ql\s+cron\s+disable\s+(.+)$</span><br><span class="line">^ql\s+cron\s+find\s+(.+)$</span><br><span class="line">^ql\s+cron\s+logs\s+(.+)$</span><br><span class="line">^ql\s+cron\s+hide\s+duplicate$</span><br><span class="line"># cookie状态查询命令</span><br><span class="line">ql cookie status</span><br><span class="line"># 下载单个脚本</span><br><span class="line">ql raw ?</span><br><span class="line"># 运行脚本</span><br><span class="line">ql task ?</span><br><span class="line"># 拉库指令</span><br><span class="line">ql repo ? 例：ql repo https://github.com/cdle/carry.git</span><br><span class="line">#关闭自动隐藏任务命令：</span><br><span class="line">set qinglong autoCronHideDuplicate false</span><br></pre></td></tr></table></figure></li></ul><h3 id="对接nolan"><a class="markdownIt-Anchor" href="#对接nolan"></a> 对接<a href="https://github.com/NolanHzy/nvjdc">Nolan</a></h3><ul><li>请看官方</li><li><a href="https://t.me/joinchat/dL-NJh1G6bc2OGM1">nolan 群组</a><ul><li>对接 XDD，需要填 XDDUrl 和 XDDToken，青龙留空！！！ “Config”: []</li><li>对接青龙，需要把 XDDUrl 和 XDDToken 留空，同时填好 Config 里的青龙配置！</li><li>对接傻妞(芝士)，需要把 XDDUrl 和 XDDToken 还有 Config 都留空。</li><li>对接傻妞(芝士)：</li><li>给傻妞发 set jd_cookie nolan_addr <a href="http://xxx.xxx.xxx.xxx/">http://xxx.xxx.xxx.xxx</a>:xxxx</li><li>不管对接什么，首先确保网页可以打开并且没有报错！！！再问关于对接什么什么出现问题是以上提到的直接送走！</li><li>大佬被无脑问题搞得跑路了，请不要在大佬群里问无脑问题，提问前请看<a href="https://github.com/HandSonic/HTQ">提问的智慧</a></li></ul></li></ul><h3 id="对接更多"><a class="markdownIt-Anchor" href="#对接更多"></a> 对接更多···</h3><ul><li>更多请看<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/31910.html#i-3">小姐姐的教程</a></li></ul><h2 id="然后就是返利设置"><a class="markdownIt-Anchor" href="#然后就是返利设置"></a> 然后就是返利设置</h2><h3 id="我目前测试情况欢迎友好交流"><a class="markdownIt-Anchor" href="#我目前测试情况欢迎友好交流"></a> 我目前测试情况，欢迎友好交流</h3><h4 id="京东全自动转链接淘宝需要确认"><a class="markdownIt-Anchor" href="#京东全自动转链接淘宝需要确认"></a> 京东全自动转链接，淘宝需要确认</h4><h4 id="具体步骤还是移步小姐姐"><a class="markdownIt-Anchor" href="#具体步骤还是移步小姐姐"></a> 具体步骤还是移步<a href="https://www.kejiwanjia.com/jiaocheng/zheteng/notes/31949.html">小姐姐</a></h4><h5 id="1-我来说一下遇到的坑"><a class="markdownIt-Anchor" href="#1-我来说一下遇到的坑"></a> 1. 我来说一下遇到的坑</h5><ul><li>你需要在群里根据群机器人的验证正版，需要使用<strong>一键安装版本</strong>的傻妞</li><li>京东可以根据以下步骤：<ul><li>第一步（前提使用一键安装版本的傻妞） #关闭禁用京东返利<br />set otto disable_jd false<br />#关闭禁用淘宝返利<br />set otto disable_tb false<br />#开启京东返利调试模式<br />set otto jd_debug true<br />#开启淘宝返利调试模式<br />set otto tb_debug true<br />#关闭机器人自我回复<br />set qq onself false</li><li>第二步<br />重启</li><li>第三步<br />发京东短链接、淘口令给你的机器人。<br />第一次配置请不要跳过，全部按照格式重新配置。<br />老用户请把 js 给删了。<br />配置好后只转发采集群消息，其他无视</li></ul></li></ul><h3 id="对接微信可爱猫"><a class="markdownIt-Anchor" href="#对接微信可爱猫"></a> 对接微信（可爱猫）</h3><ul><li>研究 ing</li><li>我虚心请教各位大佬了</li><li>最后，欢迎来我的<a href="https://ymlclub.cn/">博客</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="傻妞" scheme="https://ymlclub.cn/tags/%E5%82%BB%E5%A6%9E/"/>
    
    <category term="nalan" scheme="https://ymlclub.cn/tags/nalan/"/>
    
    <category term="踩坑" scheme="https://ymlclub.cn/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="返利" scheme="https://ymlclub.cn/tags/%E8%BF%94%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>京东薅羊毛不完全指北</title>
    <link href="https://ymlclub.cn/20210927523/"/>
    <id>https://ymlclub.cn/20210927523/</id>
    <published>2021-09-27T15:50:54.000Z</published>
    <updated>2022-06-30T02:49:17.871Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><ul><li>由于每次有<strong>新朋友</strong>加入小分队就会问相关的一些问题，索性慢慢整理下来，也让后面加入的可以快速的了解整个流程</li><li>还有很多未涉及的地方，请多多指教</li><li>下文用“jd”代替“京东”</li></ul><h2 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h2><h3 id="开始接触-jd-羊毛是几个月前"><a class="markdownIt-Anchor" href="#开始接触-jd-羊毛是几个月前"></a> 开始接触 jd 羊毛是几个月前</h3><ul><li>当时偶然看到有人在讨论京东脚本，然后顺藤摸瓜就找到了大佬的 github，然后就开始了一段薅羊毛之旅</li><li>本人是使用：黑群晖-docker 青龙+傻妞+nolan 短信验证 搭建的</li><li>现在 qq、微信机器人已经具备群聊、私聊登录 jd 账号并获取 cookie（后简称 ck）的能力，后面会截图给出使用方法</li><li>可以在群里，或者加好友后发送“登陆”、“登录”都可以，根据提示进行登录，登陆后可以进行查询操作</li></ul><h3 id="加入小分队后要做的事"><a class="markdownIt-Anchor" href="#加入小分队后要做的事"></a> 加入小分队后要做的事</h3><h4 id="一-登陆"><a class="markdownIt-Anchor" href="#一-登陆"></a> 一: 登陆</h4><ol><li><p>私聊或在群里发送登陆”、“登录，机器人会回复你相关信息，请根据提示进行操作即可登录 jd 并获取 ck</p><ul><li>短信登录的 jd 后，ck 有效期一般为<strong>一个月</strong>，当 ck 过期后，需要重新进行短信登录</li><li>做好登陆后私聊我进行备注，没有备注的到期后自动踢 🦶“下车”</li><li>ck 包含你的 jd 信息，不要轻易随便给陌生人你的 ck（除非信得过的人，比如我）</li><li>ck 可以通过更改 jd 密码更换</li><li><strong>记得关闭设置–支付设置–免密支付（没开通更好）</strong></li></ul></li><li><p>说说微信、qq 的<strong>机器人</strong>可以做什么</p><ul><li>帮你登录 jd 并获取 ck，自动上传到服务器进行任务</li><li>可以进行性价比比价<ul><li>你发送京东链接到群里，机器人会自动帮你对比商品价格</li><li>淘宝链接还没有调试好，可以先发给我，我给你转链接</li></ul></li><li>可以自动搜索并领<strong>取隐藏优惠券</strong><ul><li>在商品界面，点击“复制连击”，把链接发到群里，机器人会自动领取优惠券，然后点击机器人的链接进行下单</li><li>淘宝链接不回复的私聊我</li></ul></li><li>凡是通过机器人发送链接下单的，私聊我会有<strong>惊喜红包</strong>呦</li><li>可以进行娱乐游戏：成语接龙等</li><li>可以呼唤“小爱同学”</li><li>下面是登录教程：<ul><li>对机器人说 ”登录“，然后根据机器人回复输入”手机号“”验证码“，机器人会自动帮你登录，当提示登录成功后即完成，然后你可以发送查询，查询你的 jd 相关信息，如下图所示：</li><li>发送登录!</li></ul></li><li>当你的 ck 过期（一般一个月）后，你就需要重新按照以上步骤重新登录</li></ul></li></ol><h4 id="二登陆可以干什么为什么要登陆"><a class="markdownIt-Anchor" href="#二登陆可以干什么为什么要登陆"></a> 二：登陆可以干什么（为什么要登陆）</h4><h5 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h5><ul><li>京东有许多地方需要手动进行操作才能获得相应的物品<ul><li>例如：京东农场：需要手动浇水</li><li>牧场需要买白菜，小鸡仔等一系列操作</li><li>现在全部使用脚本，定时进行这些操作，即可解放双手，提高效率</li></ul></li></ul><h5 id="为什么有些需要手动点击进去"><a class="markdownIt-Anchor" href="#为什么有些需要手动点击进去"></a> 为什么有些需要手动点击进去</h5><ul><li>京东有很多小活动、任务、等</li><li>有的需要创建你的账号、有的需要名字、有的需要手动选择想要的物品</li><li>所以很多活动需要你<strong>手动</strong>进去，完成<strong>新手教程</strong>后，脚本才能给你跑，就是说需要你开启活动</li><li>目前可以根据这个图片指引，手动参加活动（图片很长，请仔细观看，有的活动找不到没关系，跳过就行了）<ul><li><img src="https://tucang.cc/api/image/show/ec40ca642ab314ff3aaa08e6141a20b0" alt="WechatIMG575" /></li></ul></li></ul><h5 id="我不想用了怎么退出"><a class="markdownIt-Anchor" href="#我不想用了怎么退出"></a> 我不想用了？怎么退出</h5><ul><li>只需要私聊我，然后就可以退出</li></ul><h2 id="怎么购买"><a class="markdownIt-Anchor" href="#怎么购买"></a> 怎么购买？</h2><h3 id="我给大家演示下如何购买商品会得到最大优惠"><a class="markdownIt-Anchor" href="#我给大家演示下如何购买商品会得到最大优惠"></a> 我给大家演示下，如何购买商品，会得到最大优惠</h3><ol><li><p>首先你需要完成上面的步骤，然后发送查询，机器人会回复你</p><ol><li><p><img src="https://tucang.cc/api/image/show/97548d840b885050777c540c0c6c0770" alt="image-20211109155838262" /></p></li><li><p>京豆是可以抵现金的，详细请看官方<a href="https://help.jd.com/user/issue/167-4215.html">京豆使用规则</a><img src="https://tucang.cc/api/image/show/c03fa58fe752ac5f00cbac1d08c9d127" alt="image-20211109160041434" /></p></li><li><p>你有惊喜的红包，但是不能在京东使用，可以这样</p><ol><li><p>京东选择你想要的产品，比如说天冷了，你买一条秋裤（再不穿妈妈该揍你了）</p></li><li><p>你在京东看上了一条!</p></li><li><p>然后分享——复制链接——发到群里</p></li><li><p>在点击“去抢购”</p></li><li><p>再打开的链接中（或者跳转到京东）：点击添加到购物车</p></li><li><p>然后打开“惊喜”app（没登陆的京东一键登录）</p></li><li><p>点击购物车——然后去结算</p></li><li><p>然后选择使用京豆（这里叫喜豆，其实是一比一的），在选择红包</p></li><li><p>ok 了，一个订单就完成了</p></li></ol></li></ol></li></ol><h2 id="三下面是一些可能有用的"><a class="markdownIt-Anchor" href="#三下面是一些可能有用的"></a> 三：下面是一些可能有用的</h2><ul><li>登录后你的账号会存在我的群辉-docker–qinglong 中，然后青龙（qinglong）会根据其中的脚本给你做任务，最明显的特征就是<strong>京豆</strong>每天都会涨（不放心可以不登录）</li><li>你最好需要下载的 app 有**“京喜”、“京东极速版”**app</li></ul><ol><li><p>下面按个看一下</p><ul><li><p><strong>”京东“app</strong></p><ul><li>首页搜索 <s><em>“玩一玩”</em></s> （改名了） “边玩边赚” 四个字，把里面所有的链接点一遍，选择商品、建立账号啥的，然后脚本会给你做这些任务（参考上面的图片）</li><li>红包提现：京东玩一玩–领现金 ，点击即可提现到微信，第一次 2 元。第二次可以提现 10 元，第三次 30 元 ；反正我提了不少了</li></ul></li><li><h4 id="京喜app"><a class="markdownIt-Anchor" href="#京喜app"></a> “京喜”app</h4><ul><li>很多红包是仅限在京喜 app 中使用的，你下载京喜后，登录你的京东账号，你就会发现头像下方有红包，可能是几块钱、也可能 10 几块， 但是你要记得，这个红包 🧧 周期短，可能每天过期几块钱，当你买东西花光了这里的红包，过几天他就会自动增长到几块钱（不知道卖啥的话，就买纸，哈哈哈哈哈）</li><li>京喜牧场：牧场中有鸡蛋，鸡蛋可以换相应的东西，根据自身需求换购</li><li>京喜工厂： 可以选择商品，脚本会自动给你跑（比京东工厂靠谱感觉）</li><li>京喜财富岛：可以换购商品，自行查看</li><li>京喜还有很多不知道的，欢迎补充</li></ul></li><li><p><strong>”京东极速版“app</strong></p><ul><li>这个 app 很爽呀，毕竟白嫖的多</li><li>正常下载，登录京东账号</li><li>下面有金币 XXXX（个）–这里脚本每天会给你做任务，你会获得金币 10000=1 元，基本每天可以获得 1 元左右，点击进入可以看到换红包 🧧 界面（推荐换购 50 元的）；红包属于无门槛宏红包，比如说你看到一个 51 元的产品，你可以花费 1 元+刚才的 50 元红包进行购买</li><li>别的我没怎么注意，这个金币已经很好了</li></ul></li></ul></li></ol><h2 id="最后所有脚本来源于网络请自行判断风险"><a class="markdownIt-Anchor" href="#最后所有脚本来源于网络请自行判断风险"></a> 最后，所有脚本来源于网络，请自行判断风险</h2><ul><li><h4 id="本人不做付费代挂也不提倡大家去付费代挂"><a class="markdownIt-Anchor" href="#本人不做付费代挂也不提倡大家去付费代挂"></a> <strong>本人不做付费代挂，也不提倡大家去付费代挂</strong></h4></li><li><h4 id="本人不做付费代挂也不提倡大家去付费代挂-2"><a class="markdownIt-Anchor" href="#本人不做付费代挂也不提倡大家去付费代挂-2"></a> <strong>本人不做付费代挂，也不提倡大家去付费代挂</strong></h4></li><li><h4 id="本人不做付费代挂也不提倡大家去付费代挂-3"><a class="markdownIt-Anchor" href="#本人不做付费代挂也不提倡大家去付费代挂-3"></a> <strong>本人不做付费代挂，也不提倡大家去付费代挂</strong></h4></li><li><p>如果你想支持我的话，可以通过群里机器人的链接购物，教程已经很清楚了；如何使用</p></li><li><p>或者直接打赏</p></li><li><p>最后，祝您愉快</p></li></ul><h2 id="结束撒花"><a class="markdownIt-Anchor" href="#结束撒花"></a> 结束，撒花 🎉</h2><ul><li>祝您开心每一天</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="傻妞" scheme="https://ymlclub.cn/tags/%E5%82%BB%E5%A6%9E/"/>
    
    <category term="薅羊毛" scheme="https://ymlclub.cn/tags/%E8%96%85%E7%BE%8A%E6%AF%9B/"/>
    
    <category term="京东" scheme="https://ymlclub.cn/tags/%E4%BA%AC%E4%B8%9C/"/>
    
    <category term="指北" scheme="https://ymlclub.cn/tags/%E6%8C%87%E5%8C%97/"/>
    
  </entry>
  
  <entry>
    <title>我与我的黑群晖</title>
    <link href="https://ymlclub.cn/2021052814177/"/>
    <id>https://ymlclub.cn/2021052814177/</id>
    <published>2021-05-28T15:15:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="黑群晖这件事也是折腾了许久"><a class="markdownIt-Anchor" href="#黑群晖这件事也是折腾了许久"></a> 黑群晖这件事也是折腾了许久</h2><p>​ 其实群晖这个东西在高中，甚至在大学就听说过，只恨自己是真的穷，买不起这些玩意；现在毕业了，自己也工作了，终于有点钱可以搞一下自己喜欢的东西了！</p><h4 id="那么开始吧"><a class="markdownIt-Anchor" href="#那么开始吧"></a> 那么开始吧！</h4><ol><li><p>首先，你需要一个电脑（这不是废话吗，没电脑，折腾空气吗？跟一颗喜欢折腾的心 ♥，不然直接白裙</p></li><li><p>然后，你需要登录这个 <a href="http://www.nasyun.com">这个</a> 或 <a href="https://www.openos.org/">这个</a> 网站，了解下黑群晖一些基本信息</p></li><li><p>然后你就可以看网站的教程自己黑了，我没啥可说的，哈哈哈哈哈哈哈；来张<a href="https://xpenology.com/forum/topic/13333-tutorialreference-6x-loaders-and-platforms/">截图</a>吧！</p></li><li><p>其实需要注意的只有以下几点：</p><ul><li>你一定要明确自己的目的，然后再选择硬件配置，只是想简单使用，不做大型影音播放的话，最好选低功耗板 U；想做家庭影音或在线视频库的需要配置高一点，最好是带核显的且大于 4 带的 intel CPU，这样可以核显硬解很多高质量片源(10bit、h265 啥的)，咱也不是特别懂，反正好像是 918 以上的支持核显硬解，说错了大佬轻喷</li><li>然后确认自己宽带服务商 isp（公网 ip 有关）：<ul><li>如果你是电信—— 恭喜你，你是要到公网 IP 可能性最大的，当然，这个跟地区也有一定的关系</li><li>如果你是联通——也是有可能要到公网 IP 的，不过概率没有电信大，当然，也跟地区有关了，还有、还有、还有、最重要的 ——**感谢联通 ** <strong>感谢联通</strong> <strong>感谢联通</strong>，让我们看到了无数小姐姐！</li><li>如果你是联通——垃圾移动······ 别骂了，别骂了 虽然移动的概率是最低的，但是好像移动的可以通过 ip V6 来实现曲线救国，移动的小伙伴可以尝试下，我看的资料不多.</li><li>如果你是铁通、长城—— 不知道现在还有吗，自己测试吧</li></ul></li><li>然后就是折腾群晖套件、docker、影音库了 欢迎入坑，哈哈哈哈</li></ul></li><li><p>最后，黑群晖比很苹果要简单得多，只要搭建好了平台，安装系统，那就是几个小时的事</p></li><li><p>总结下：一入 <strong><s>黑果</s></strong> 群晖深似海，从此早睡是路人！</p></li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="群晖" scheme="https://ymlclub.cn/tags/%E7%BE%A4%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题美化</title>
    <link href="https://ymlclub.cn/202011053076/"/>
    <id>https://ymlclub.cn/202011053076/</id>
    <published>2020-11-05T22:30:54.000Z</published>
    <updated>2022-06-30T02:49:17.871Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="butterfly主题美化备忘"><a class="markdownIt-Anchor" href="#butterfly主题美化备忘"></a> Butterfly主题美化备忘</h2><p>终于找到了自己喜欢的主题，折腾了这么久也终于可以安安稳稳的写点东西了，感觉自己想改得东西改的也有七七八八了，下一步就是找 <s>下个主题折腾</s> 安心写点东西了。</p><h2 id="那么开始吧"><a class="markdownIt-Anchor" href="#那么开始吧"></a> 那么开始吧</h2><h3 id="看板娘血小板-血小板-血小板"><a class="markdownIt-Anchor" href="#看板娘血小板-血小板-血小板"></a> 看板娘（血小板、血小板、血小板）</h3><ol><li><p>为了这个看板娘可是让我整了好久好久，Google、百度各种帖子，群里各种问问题，自己花样作死，终于到了一个自己可以勉强看得过的样子，虽然还没有做到最好，但是我已经尽我最大的努力了。后面会附上我引用的帖子和帮助过我的大佬，由于过程太复杂，不能把所有的帖子都放上，见谅吧。</p></li><li><p>下面是代码时间，基于<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a> 3.3主题，hexo: 5.2.0,来吧，展示</p></li><li><p>在开始之前先说好哈，所有操作都是本人（小白）自己看教程加上自己的“小聪明”，对，就是马老师说的年轻人的小聪明，<s>我看到以后，“啪”的一下点进去了，很快哈</s></p></li><li><p>首先需要你找到主题配置文件，如果你严格按照Butterfly主题文档设置的话，应该在你blog的根目录中，有个名字为_config.butterfly.yml的文件，就是主题配置文件，打开，定位到 <em><strong>*inject*</strong></em> 然后就是在 <strong>bottom</strong> 项下添加如下代码：</p><pre><code> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​#看板娘</span><br><span class="line">​ - &#x27;&lt;script data-pjax src=&quot;https://fastly.jsdelivr.net/gh/yml66/live2d/js/index.js&quot;&gt;&lt;/script&gt;&#x27;</span><br></pre></td></tr></table></figure></code></pre></li></ol><ul><li>是引用通过jsdelivr加速后的GitHub仓库的资源，反正这是我最终的解决办法了，如果你想自己整的话，可以克隆下我的仓库，或者直接去下面的链接中自己一步步的设置，如果想跟我同款的话可以直接按照上面设置。</li></ul><h3 id="看板娘有关的链接如下"><a class="markdownIt-Anchor" href="#看板娘有关的链接如下"></a> 看板娘有关的链接如下：</h3><p>​    - <a href="https://fxlabtinystar.cn/2020/08/14/Live2dAndHexo/">缘丶星</a><br />​<br />​    - <a href="https://github.com/galnetwen/Live2D">后宫学长</a><br />​<br />​    - <a href="https://github.com/JIAOBANTANG/live2d-xuexiaoban">模型出处</a><br />​<br />​    - <a href="https://fxlabtinystar.cn/2020/08/15/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%9B%A0Live2d%E9%80%A0%E6%88%90%E7%9A%84%E8%AE%BF%E9%97%AE%E5%8D%A1%E9%A1%BF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">手机端不显示</a><br />​<br />​    - 等等</p><h3 id="背景图片与鼠标样式-鼠标滑动等特效"><a class="markdownIt-Anchor" href="#背景图片与鼠标样式-鼠标滑动等特效"></a> 背景图片与鼠标样式、鼠标滑动等特效</h3><ul><li>这些都是从 <a href="https://www.antmoe.com/">小康大佬</a>大佬哪里偷来的，具体可以去哪里看的，按需选择！</li></ul><h2 id="完工睡觉"><a class="markdownIt-Anchor" href="#完工睡觉"></a> 完工，睡觉😴！</h2><p>​</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="随笔" scheme="https://ymlclub.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>hi 好久不见</title>
    <link href="https://ymlclub.cn/2020110554071/"/>
    <id>https://ymlclub.cn/2020110554071/</id>
    <published>2020-11-05T22:30:54.000Z</published>
    <updated>2022-06-30T02:49:17.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="记一随笔"><a class="markdownIt-Anchor" href="#记一随笔"></a> 记一随笔</h3><ul><li>距离上次发表文章都是去年的事情了，现在除了去年的域名，什么都没剩下，自己也不知道怎么了，事情总是拿起了又放下，总感觉自己缺点啥，又总是不知道自己要啥！可能这就是“啥也不是”吧，23333</li><li>这几天心血来潮突然又把 blog 搞起来了，那就不要让他停下来了，总要给自己找点事情做吧，感觉自己的文字表达能力太弱了，想说啥都表达不出来，希望坚持 ✊ 写作可以慢慢的把自己的表达能力提高一丢丢，而且我建 blog 都不知道自己要干啥，可能就会当一个随笔，日记吧（正常人谁写日记！）呸，我这是 blog！不叫日记！</li><li>有时候感觉自己的笑点跟别人的也不太一样，也不知道自己这次能坚持多久，不管了；加油——致自己！</li></ul><h3 id="关于-blog"><a class="markdownIt-Anchor" href="#关于-blog"></a> 关于 blog</h3><ul><li>我想在这里分享一些自己发现的好东西：至少让自己下次找东西的时候不要找不到</li><li>然后就是如果有人看到的话，可以留言，提个意见；可能就真的会采纳你的建议，我看到的所有留言都会回复（能回复过来的话，23333）最尴尬的莫过于自己自娱自乐了吧！</li><li>就到这里吧</li></ul><h3 id="关于分享"><a class="markdownIt-Anchor" href="#关于分享"></a> 关于分享</h3><ul><li>我分享的东西如果有出处的话，我会打上出处，如果我忘记了，或者找不到了的话，并且侵犯了你的利益，请联系我，我会立即删除！</li><li>好了，该睡觉了 ！ 晚安，打工人！</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    
    <category term="随笔" scheme="https://ymlclub.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
